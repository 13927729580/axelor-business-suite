<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://apps.axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://apps.axelor.com/xml/ns/object-views http://apps.axelor.com/xml/ns/object-views/object-views_2.0.xsd">


	<chart name="chart.planned.qty.by.location" title="Stock prÃ©visionnel">
		<dataset type="jpql">
	    <![CDATA[
		SELECT
	    SUM(_stockMoveLine.qty) AS qty,
	    MONTH(_stockMove.estimatedDate) as month,
	    _to_location.name AS location
		FROM
		    StockMoveLine _stockMoveLine
		LEFT JOIN
		    _stockMoveLine.product AS _product
		LEFT JOIN
		    _stockMoveLine.stockMove as _stockMove
		LEFT JOIN
		    _stockMove.fromLocation AS _from_location
		LEFT JOIN
		    _stockMove.toLocation AS _to_location
		WHERE
		    _product.id = :id AND _stockMoveLine.product.id = _product.id AND (_from_location.typeSelect = 1 OR _to_location.typeSelect = 1 ) AND _stockMove.estimatedDate > current_date
		GROUP BY
		    _from_location.id,
		    _to_location.id,
		    MONTH(_stockMove.estimatedDate)
		ORDER BY
		    MONTH(_stockMove.estimatedDate)
	    ]]>
	    </dataset>
		<category key="month" type="month" />
		<series key="qty" groupBy="location" type="bar" aggregate="sum" />
	</chart>



	<chart name="chart.stock.report.for.product" title="Stock" onInit="action-product-set-today-date">
	    <search-fields>
		    <field name="todayDate" type="date" widget=""/>
	  	</search-fields>
		<dataset type="sql">
	    <![CDATA[
  			SELECT estimatedate,locat,SUM(qty) OVER (PARTITION BY locat ORDER BY locat,estimatedate) AS qty 
					FROM (
						(SELECT DATE(:todayDate) AS estimatedate,location.name AS locat,
			               		(SELECT SUM(CASE WHEN move.from_location = loc.id THEN -1*qty
			                           WHEN move.to_location = loc.id THEN qty
			                           END) AS qty                                                                 
		               			FROM 	supplychain_stock_move_line line,
			                    		supplychain_stock_move move,
			                    		supplychain_location loc 
			               		WHERE line.stock_move = move.id 
									AND move.real_date <= DATE(:todayDate)
									AND move.status_select in (2,3)
									AND line.product = :id
									AND loc.id = location.id
									AND (move.from_location = loc.id OR move.to_location = loc.id)
									AND loc.type_select = 1) AS qty
						FROM supplychain_location_line loc_line, supplychain_location location
						WHERE loc_line.location = location.id 
							AND location.type_select = 1 
							AND loc_line.product = :id
						GROUP BY location.id) 
				   		UNION ALL
				   		(SELECT estimated_date AS dt,locat,sum(qty)
				                FROM (SELECT location.name AS locat,move.estimated_date AS estimated_date,
				         	           	CASE WHEN move.from_location = location.id THEN -1*line.qty
				                        WHEN move.to_location = location.id THEN line.qty
				                        END AS qty
				                     FROM supplychain_stock_move_line line 
				                     LEFT JOIN supplychain_stock_move move ON (line.stock_move = move.id)
				                     LEFT JOIN supplychain_location location ON (move.from_location = location.id OR move.to_location = location.id)
		      	             		 WHERE  line.product = :id
					                     AND move.estimated_date > DATE(:todayDate)
					                     AND location.type_select = 1) location
              						 GROUP BY estimated_date,locat) ORDER BY locat,estimatedate) location_stock;  
	    ]]>
	    </dataset>
		<category key="estimatedate" type="date" />
		<series key="qty" groupBy="locat" type="line" aggregate="sum" />
	</chart>

	 <action-record name="action-product-set-today-date" model="com.axelor.apps.base.db.Product">
    	<field name="todayDate" expr="call:com.axelor.apps.base.service.administration.GeneralService:getTodayDate()" />
    </action-record>

</object-views>
