<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://apps.axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://apps.axelor.com/xml/ns/data-import http://apps.axelor.com/xml/ns/data-import/data-import_0.8.xsd">
  
	<input file="payment.csv" type="com.axelor.apps.account.db.MoveLine" call="com.axelor.csv.script.ImportPayment:generateMoveLines">
		<bind to="move">
			<bind column="payment_numpiece" to="reference" />
		    <bind to="journal" search="self.koalaId = :payment_journal_id" update="true">
		    	<bind column="payment_journal_id" to="koalaId" />
		    </bind>
		    <bind to="state" eval="'validated'" />
 		    <bind to="ignoreInAccountingOk" eval="false" />
<!-- // 		    <bind to="ignoreInReminderOk" eval="false" /> -->
<!-- // 		    <bind to="fromSchedulePaymentOk" eval="false" /> -->
		    <bind to="accountingOk" eval="true" />
		    <bind to="rejectOk" eval="false" />
		    <bind to="date" eval="!payment_date.empty ? payment_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"/>
		    <bind to="dueDate" eval="!payment_date.empty ? payment_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"/>
		    <bind to="invoice" search="self.koalaId = :payment_invoice_id" update="true">
		    	<bind column="payment_invoice_id" to="koalaId" />
		    </bind>
		</bind>
		<bind to="contractLine" search="self.koalaId = :payment_cont_id"
				update="true">
				<bind column="payment_cont_id" to="koalaId" />
		</bind>
		<bind to="ignoreInAccountingOk" eval="false" />
		<bind to="credit" eval="payment_mt.replace(',','.')" />
		<bind to="description" column="payment_obs.replaceAll('Paiement sur contrat','ExcÃ©dent sur contrat')" />
		<bind to="date" eval="!payment_date.empty ? payment_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"/>
		<bind to="dueDate" eval="!payment_date.empty ? payment_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"/>
	</input>
	
	<input file="payment.csv" type="com.axelor.apps.account.db.Move" search="self.reference = :payment_numpiece" call="com.axelor.csv.script.ImportPayment:updateAmountRemaining">
		<bind column="payment_numpiece" to="reference" />
	</input>
	
</csv-inputs>
