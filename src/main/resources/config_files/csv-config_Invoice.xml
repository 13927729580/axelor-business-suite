<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://apps.axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://apps.axelor.com/xml/ns/data-import http://apps.axelor.com/xml/ns/data-import/data-import_0.8.xsd">
  
<!-- 	<input file="InvoiceLineType.csv" type="com.axelor.apps.account.db.InvoiceLineType" search="self.name = :name"> -->
<!-- 		<bind to="name" column="name" /> -->
<!-- 		<bind to="koalaId" column="koala_id"/> -->
<!-- 	</input> -->
	<input file="invoice.csv" type="com.axelor.apps.account.db.Invoice"
		call="com.axelor.csv.script.ImportInvoice:updatePartnerAccountAndPaymentMode">
		<bind column="inv_id" to="koalaId" />
		<bind column="inv_ancnumfac" to="oldInvoiceId"/>
		<bind column="inv_ancnumfac" to="debitNumber" if="inv_flag_soldee == '1'"/>
		<bind column="inv_baseorig" to="importOrigin"/>
		<bind to="company" search="self.koalaId = :inv_societe_id" update="true">
			<bind column="inv_societe_id" to="koalaId" />
		</bind>
		<bind to="contractLine" search="self.koalaId = :inv_cont_id"
			update="true">
			<bind column="inv_cont_id" to="koalaId" />
		</bind>
		<bind column="inv_numfac" to="invoiceId" />
		<bind
			eval="!inv_date_fac.empty ? inv_date_fac.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="invoiceDate" />
		<bind
			eval="!inv_date_exig.empty ? inv_date_exig.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="dueDate" />
		<bind to="journal" search="self.koalaId = :inv_journal_id"
			update="true">
			<bind column="inv_journal_id" to="koalaId" />
		</bind>
		<bind to="invoicePaymentCondition" search="self.koalaId = :inv_dossierregroup_id"
			update="true">
			<bind column="inv_dossierregroup_id" to="koalaId" />
		</bind>
		<bind to="payerPartner" search="self.koalaId = :inv_tierspay_id"
			update="true">
			<bind column="inv_tierspay_id" to="koalaId" />
		</bind>
		<bind to="status" search="self.koalaId = :inv_statut_id" update="true">
			<bind column="inv_statut_id" to="koalaId" />
		</bind>
		<bind to="exTaxTotal" eval="!inv_totHT.empty ? inv_totHT.replace(',','.') : null" />
		<bind to="inTaxTotal" eval="!inv_totTTC.empty ? inv_totTTC.replace(',','.') : null" />
		<bind to="vatTotal" eval="!inv_totTVA.empty ? inv_totTVA.replace(',','.') : null" />
		
		<bind column="inv_bloqprelev_flag" to="debitBlockingOk" eval="inv_bloqprelev_flag == '1' ? 'true' : 'false'" />
		
		<bind
			eval="!inv_bloqprelev_date.empty ? inv_bloqprelev_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="debitBlockingToDate" />
		
		<bind to="debitBlockingReason" search="self.koalaId = :inv_bloqprelev_motif_id"
			update="true">
			<bind column="inv_bloqprelev_motif_id" to="koalaId" />
		</bind>
		
		<bind column="inv_bloqrelanc_flag" to="reminderBlockingOk" eval="inv_bloqrelanc_flag == '1' ? 'true' : 'false'" />
		
		<bind
			eval="!inv_bloqrelanc_date.empty ? inv_bloqrelanc_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="reminderBlockingToDate" />
			
		<bind to="reminderBlockingReason" search="self.koalaId = :inv_bloqrelanc_motif_id"
			update="true">
			<bind column="inv_bloqrelanc_motif_id" to="koalaId" />
		</bind>
		
	</input>
	
	<input file="invoiceline.csv" type="com.axelor.apps.account.db.InvoiceLine" call="com.axelor.csv.script.ImportInvoice:CompleteInvoiceLine">
		<bind column="invline_id" to="koalaId" />
		<bind to="invoice" search="self.koalaId = :invline_inv_id"
			update="true">
			<bind column="invline_inv_id" to="koalaId" />
		</bind>
		<bind to="invoiceLineType" search="self.koalaId = :invline_section_id" update="true">
			<bind to="koalaId" column="invline_section_id" />
		</bind>
		<bind
			eval="!invline_date_du.empty ? invline_date_du.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="fromDate" />
		<bind
			eval="!invline_date_au.empty ? invline_date_au.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="toDate" />
		<bind to="post" search="self.parameterId = :invline_posthorosais_id"
			update="true">
			<bind column="invline_posthorosais_id" to="parameterId"
				eval="!invline_posthorosais_id.empty ?  'poste_'+invline_posthorosais_id : '' " />
		</bind>
		<bind column="invline_qte" to="qty"
			eval="!invline_qte.empty ? invline_qte.replace(',','.') : null" />
		<bind to="price" eval="!invline_pu.empty ? invline_pu.replace(',','.') : null" />
		<bind to="unit" search="self.koalaId = :invline_unite_id" update="true">
			<bind column="invline_unite_id" to="koalaId" />
		</bind>
		<bind to="product" search="self.koalaId = :invline_produit_id"
			update="true">
			<bind column="invline_produit_id" to="koalaId" />
		</bind>
<!-- 		<bind to="vat" search="self.koalaId = :invline_tva_id" update="true"> -->
<!-- 			<bind column="invline_tva_id" to="koalaId" /> -->
<!-- 		</bind> -->
		<bind to="exTaxTotal" eval="!invline_mt.empty ? invline_mt.replace(',','.') : null" />
	</input>
	
	<input file="tvaline.csv" type="com.axelor.apps.account.db.InvoiceLineVat" call="com.axelor.csv.script.ImportInvoice:CompleteInvoiceLineVat">
		<bind column="tvaline_id" to="koalaId" />
<!-- 		<bind to="vat" search="self.koalaId = :tvaline_tvacode_id" update="true"> -->
<!-- 			<bind column="tvaline_tvacode_id" to="koalaId" /> -->
<!-- 		</bind> -->
		<bind to="invoice" search="self.koalaId = :tvaline_invoice_id"
			update="true">
			<bind column="tvaline_invoice_id" to="koalaId" />
		</bind>
		<bind to="exTaxBase"
			eval="!tvaline_assiette.empty ? tvaline_assiette.replace(',','.') : null" />
		<bind to="vatTotal" eval="!tvaline_mt.empty ? tvaline_mt.replace(',','.') : null" />
	</input>
	
	<input file="taxline.csv" type="com.axelor.apps.account.db.InvoiceLineTax" call="com.axelor.csv.script.ImportInvoice:CompleteInvoiceLineTax">
		<bind column="taxline_id" to="koalaId" />
		<bind to="invoice" search="self.koalaId = :taxline_invoice_id"
			update="true">
			<bind column="taxline_invoice_id" to="koalaId" />
		</bind>
		<bind to="tax" search="self.koalaId = :taxline_taxe_id" update="true">
			<bind column="taxline_taxe_id" to="koalaId" />
		</bind>
		<bind to="base"
			eval="!taxline_assiette.empty ? taxline_assiette.replace(',','.') : null" />
		<bind to="rateTax"
			eval="!taxline_taux.empty ? taxline_taux.replace(',','.') : null" />
<!-- 		<bind to="vat" search="self.koalaId = :taxline_tva_id" update="true"> -->
<!-- 			<bind column="taxline_tva_id" to="koalaId" /> -->
<!-- 		</bind> -->
		<bind to="exTaxTotal" eval="!taxline_mt.empty ? taxline_mt.replace(',','.') : null" />
	</input>
	
	
<!-- 	Distinct -->
	
	<input file="invoice.csv" type="com.axelor.apps.account.db.Invoice" search="self.koalaId = :inv_id" update="true"
			call="com.axelor.csv.script.ImportInvoice:validateInvoice">
			<bind column="inv_id" to="koalaId" />
	</input>

	
	<input file="invoice.csv" type="com.axelor.apps.account.db.Invoice"
		search="self.koalaId = :inv_id" update="true" call="com.axelor.csv.script.ImportInvoice:updateIgnoreInAccounting">
		<bind column="inv_id" to="koalaId" />
	</input>
	
	
<!-- 	Distinct -->
	
	<input file="invoice.csv" type="com.axelor.apps.account.db.Invoice"
		search="self.koalaId = :inv_id" update="true" call="com.axelor.csv.script.ImportInvoice:createMacroEvent">
		<bind column="inv_id" to="koalaId" />
	</input>
			
</csv-inputs>