<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://apps.axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://apps.axelor.com/xml/ns/data-import http://apps.axelor.com/xml/ns/data-import/data-import_0.8.xsd">
  
  
  
	
	<input file="schedule.csv" type="com.axelor.apps.account.db.PaymentSchedule" update="true" call="com.axelor.csv.script.ImportPaymentSchedule:getNatureSelectAndCompany">
		
		<bind to="paymentScheduleType" search="self.koalaIdType = :sched_typeech_id" update="true">
			<bind column="sched_typeech_id" to="koalaIdType" />
		</bind>
		<bind to="subPaymentScheduleType" search="self.koalaIdSubType = :sched_soustypeech_id" update="true">
			<bind column="sched_soustypeech_id" to="koalaIdSubType" />
		</bind>
		<bind to="scheduleId" column="sched_ref"/>
		<bind to="oldScheduleId" column="sched_ancref"/>
		
		<bind to="importOrigin" column="sched_baseorig"/>
		<bind
			eval="!sched_datecre.empty ? sched_datecre.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="creationDate" />
		<bind
			eval="!sched_datecre.empty ? sched_datecre.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="startDate" />
		<bind to="contractLine" search="self.koalaId = :sched_cont_id" update="true">
			<bind column="sched_cont_id" to="koalaId" />
		</bind>
		<bind to="payerPartner" search="self.koalaId = :sched_tierspay_id" update="true">
			<bind column="sched_tierspay_id" to="koalaId" />
		</bind>
		<bind to="paymentMode" search="self.koalaId = :sched_modregl_id" update="true">
			<bind column="sched_modregl_id" to="koalaId" />
		</bind>
		<bind to="bankDetails" search="self.koalaId = :sched_ribbpay_id" update="true">
			<bind column="sched_ribbpay_id" to="koalaId" />
		</bind>
		<bind to="totalToPayAmount" eval="!sched_mttot.empty ? sched_mttot.replace(',','.') : null"/>
		<bind to="state" column="sched_stat_id" eval="!sched_stat_id.empty ? (sched_stat_id.replace('16','3').replace('1','2'))"/>  
		<bind column="sched_id" to="koalaId" />
	</input>
	
	
	<input file="scheduleinvoice.csv" type="com.axelor.apps.account.db.PaymentSchedule" search="self.koalaId = :schedinv_sched_id" update="true" call="com.axelor.csv.script.ImportPaymentSchedule:assignPaymentSchedule">
		<bind to="inTaxAmount" eval="!schedinv_invoice_solde.empty ? schedinv_invoice_solde.replace(',','.') : null"/>
		
		<bind to="invoiceSet" search="self.koalaId = :schedinv_invoice_id" update="true">
			<bind column="schedinv_invoice_id" to="koalaId" />
		</bind>
		
	</input>
	
	
	
	<input file="scheduleinvoice.csv" type="com.axelor.apps.invoice.db.Invoice" search="self.koalaId = :schedinv_invoice_id" update="true">
		<bind to="paymentSchedule" search="self.koalaId = :schedinv_sched_id" update="true">
			<bind column="schedinv_sched_id" to="koalaId" />
		</bind>
		<bind to="schedulePaymentOk" eval="true" />
	</input>
	
	
	<input file="scheduleline.csv" type="com.axelor.apps.account.db.PaymentScheduleLine" update="true" call="com.axelor.csv.script.ImportPaymentSchedule:setDebitNumber">
		<bind to="paymentSchedule" search="self.koalaId = :schedline_sched_id" update="true">
			<bind column="schedline_sched_id" to="koalaId" />
		</bind>
		
		<bind to="scheduleLineSeq" column="schedline_numline"/>
	
		<bind 
			eval="!schedline_date.empty ? schedline_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="scheduleDate" />
		
		<bind
			eval="!schedline_datepayment.empty ? schedline_datepayment.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null"
			to="paymentDate" />
			
		<bind to="inTaxAmount" eval="!schedline_mt.empty ? schedline_mt.replace(',','.') : null"/>
		
		
		<bind to="status" search="self.koalaId = :schedline_statut_id" update="true">
			<bind column="schedline_statut_id" to="koalaId" />
		</bind>
		
		<bind to="requestedAmount" eval="!schedline_mtdem.empty ? schedline_mtdem.replace(',','.') : null"/>
		
		<bind to="agreementOk" column="schedline_statutdem_id" eval="schedline_statdem_id != '12' ? true : false"/>  
		
		<bind to="allocatedAmount" eval="!schedline_mtaccord.empty ? schedline_mtaccord.replace(',','.') : null"/>
		
		<bind to="socialServicePartner" search="self.koalaId = :schedline_tierspay_id" update="true">
			<bind column="schedline_tierspay_id" to="koalaId" />
		</bind>	

		<bind column="schedline_id" to="koalaId" />
		
			
	</input>
	
	<input file="scheduleline.csv" type="com.axelor.apps.account.db.PaymentScheduleLine" update="true">
		<bind to="debitNumber" eval="paymentSchedule.oldScheduleId+scheduleLineSeq" />
			
	</input>
			
	
	
	
	<input file="schedule.csv" type="com.axelor.apps.account.db.PaymentSchedule" search="self.koalaId = :sched_id" update="true" call="com.axelor.csv.script.ImportPaymentSchedule:generateMove">
		
		<bind to="koalaId" column="sched_id"/>
			
	</input>
	
	<input file="schedule.csv" type="com.axelor.apps.account.db.PaymentSchedule" search="self.koalaId = :sched_id" update="true" call="com.axelor.csv.script.ImportPaymentSchedule:generateMonthlyPayment">
		
		<bind to="koalaId" column="sched_id"/>
			
	</input>
	
	
<!-- 	<input file="schedule.csv" type="com.axelor.apps.account.db.PaymentSchedule" search="self.koalaId = :sched_id" update="true"> -->
		
<!-- 		<bind to="paymentMode" search="self.koalaId = :sched_modregl_id" update="true"> -->
<!-- 			<bind column="sched_modregl_id" to="koalaId" /> -->
<!-- 		</bind> -->
		
<!-- 	</input> -->
			
</csv-inputs>