<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://apps.axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://apps.axelor.com/xml/ns/data-import http://apps.axelor.com/xml/ns/data-import/data-import_0.8.xsd">

	<input file="AdministrationGeneral.csv" type="com.axelor.apps.administration.db.General" call="com.axelor.csv.script.ImportGeneral:init">
 		<bind to="environment" eval="'fr'"/>
    </input>
    
    <input file="user.csv" type="com.axelor.auth.db.User" />
	
	<input file="userInfo.csv" type="com.axelor.apps.user.db.UserInfo" />
    
    <input file="Account.csv" type="com.axelor.apps.account.db.Account" call="com.axelor.csv.script.ImportAccount:ignoreLine">
		<bind to="reconcileOk" eval="code.startsWith('411')?true:code.startsWith('416')?true:code.startsWith('418')?true:false" />
	</input>

	<input file="unite.csv" type="com.axelor.apps.sale.db.Unit">
		<bind column="unite_lib" to="name" />
		<bind column="unite_lib" to="code" />
	</input> 
	
	<input file="UnitConversion.csv" type="com.axelor.apps.sale.db.UnitConversion">
		<bind search="self.name = :startUnit" to="startUnit" >
			<bind to="code" column="startUnit" eval="startUnit.toUpperCase()" />
			<bind to="name" eval="startUnit.toUpperCase()" /> 
		</bind>
		<bind search="self.name = :endUnit" to="endUnit" >
			<bind to="code" column="endUnit" eval="endUnit.toUpperCase()" />
			<bind to="name" eval="endUnit.toUpperCase()" /> 
		</bind>
		<bind to="coef" column="coef"/>
	</input>
	
	<input file="ConstituentCategory.csv" type="com.axelor.apps.pricing.db.ConstituentCategory"/>

	<input file="tranche.csv" type="com.axelor.apps.contract.db.TariffBand">
		<bind column="trch_code" to="code"/>
		<bind column="trch_libelle" to="name" />
	</input>

	<input file="statut.csv" type="com.axelor.apps.administration.db.Status">
		<bind column="statut_libelle" to="name" />
		<bind column="statut_code" to="code" />
		<bind column="statut_flag_etatfourn" to="supplyStatusOK" eval="statut_flag_etatfourn == '1'? true : false" />
		<bind column="statut_flag_facture" to="invoiceStatusOK" eval="statut_flag_facture == '1'? true : false" />
		<bind column="statut_flag_pct" to="mptStatusOK" eval="statut_flag_pct == '1'? true : false" />
		<bind column="statut_flag_dossier" to="contractStatusOK" eval="statut_flag_dossier == '1'? true : false" />
		<bind column="statut_flag_contrat" to="contractLineStatusOK" eval="statut_flag_contrat == '1'? true : false" />
	</input>
	
	<input file="statutAX.csv" type="com.axelor.apps.administration.db.Status">
		<bind column="statut_libelle" to="name" />
		<bind column="statut_code" to="code" />
		<bind column="statut_flag_etatfourn" to="supplyStatusOK" eval="statut_flag_etatfourn == '1'? true : false" />
		<bind column="statut_flag_facture" to="invoiceStatusOK" eval="statut_flag_facture == '1'? true : false" />
	</input>

	<input file="agence.csv" type="com.axelor.apps.contact.db.Agency"
		search="self.num = :agence_id" update="true">
		<bind search="self.koalaId = :agence_adresse_id" to="address"
			update="true">
			<bind column="agence_adresse_id" to="koalaId" />
		</bind>
	</input>

	<input file="motif.csv" type="com.axelor.apps.sale.db.ReasonExemption">
		<bind column="motif_type" to="code" />
		<bind column="motif_libelle" to="name" />
	</input>
	
	<input file="motif.csv" type="com.axelor.apps.contract.db.StopReason">
		<bind column="motif_type" to="code" />
		<bind column="motif_libelle" to="name" />
	</input>

	<input file="structuretarifaire.csv" type="com.axelor.apps.pricing.db.PricingStructure">
		<bind eval="!structtar_id.empty? 'struct'+structtar_id : ''" to="code" />
		<bind column="structtar_libelle" to="name" />
		<bind column="structtar_flag_utilisation" to="subscribedVersionOk" eval="structtar_flag_utilisation == '1' ? true : false"/>
	</input>

	<input file="structuretarifaire.csv" type="com.axelor.apps.pricing.db.PricingStructure" search="self.koalaId = :structtar_id" update="true">
		<bind search="self.koalaId = :strucctar_GIE_id" to="parentPricingStructure" update="true">
			<bind column="strucctar_GIE_id" to="koalaId" />
		</bind>
	</input>

	<input file="niveaurelance.csv" type="com.axelor.apps.debtRecovery.db.ReminderLevel">
		<bind column="nivrel_id" to="name" />
		<bind column="nivrel_libcourt" to="code" />
		<bind column="nivrel_liblong" to="label" />
	</input>

	<input file="MailModel.csv" type="com.axelor.apps.mail.db.MailModel">
		<bind column="code" to="code" />
		<bind column="nom" to="name" />
		<bind column="type" to="typeSelect" />
		<bind column="document_concerne" to="objectConcernedSelect" />
		<bind column="type_de_relance" to="reminderTypeSelect" />
		<bind column="service_social_concerne" to="reminderSocialServiceSelect" />
		<bind column="contenu" to="content" />
		<bind column="sujet" to="subject" />
		<bind column="chemin_pdf" to="pdfModelPath"/>
	</input>

	<input file="ReminderMatrixAndLines.csv" type="com.axelor.apps.debtRecovery.db.ReminderMatrix"
		search="self.code = :matriceRelance_code" call="com.axelor.csv.script.ImportReminderMatrix:updateLevelLabel">
		<bind column="matriceRelance_nom" to="name" />
		<bind column="matriceRelance_code" to="code" />
		<bind to="reminderMatrixLineList">
			<bind to="reminderLevel" search="self.name = :matriceRelance_L_niveau"
				update="true">
				<bind to="name" column="matriceRelance_L_niveau" />
			</bind>
			<bind to="standardDeadline" column="matriceRelance_L_delaiNormal"
				eval="!matriceRelance_L_delaiNormal.empty?matriceRelance_L_delaiNormal:null" />
			<bind to="socialDeadLine" column="matriceRelance_L_delaiTarifSocial"
				eval="!matriceRelance_L_delaiTarifSocial.empty?matriceRelance_L_delaiTarifSocial:null" />
			<bind to="minThreshold" column="matriceRelance_L_seuilMinimum"
				eval="!matriceRelance_L_seuilMinimum.empty?matriceRelance_L_seuilMinimum:null" />
			<bind to="activeReminderMailModel" search="self.code = :matriceRelance_L_modeleCrNormal"
				update="true">
				<bind to="code" column="matriceRelance_L_modeleCrNormal" />
			</bind>
			<bind to="socialReminderMailModel" search="self.code = :matriceRelance_L_modeleSocial"
				update="true">
				<bind to="code" column="matriceRelance_L_modeleSocial" />
			</bind>
			<bind to="municipalReminderMailModel" search="self.code = :matriceRelance_L_emailSsCom"
				update="true">
				<bind to="code" column="matriceRelance_L_emailSsCom" />
			</bind>
			<bind to="deptReminderMailModel" search="self.code = :matriceRelance_L_emailSsDept"
				update="true">
				<bind to="code" column="matriceRelance_L_emailSsDept" />
			</bind>
			<bind to="municipalReminderDeadline" column="matriceRelance_L_delaiInfoSsCom"
				eval="!matriceRelance_L_delaiInfoSsCom.empty?matriceRelance_L_delaiInfoSsCom:null" />
			<bind to="deptReminderDeadline" column="matriceRelance_L_delaiInfoSsDept"
				eval="!matriceRelance_L_delaiInfoSsDept.empty?matriceRelance_L_delaiInfoSsDept:null" />
			<bind to="manualValidationOk"
				eval="matriceRelance_L_validationManuelle == '1' ? true:false" />
		</bind>
	</input>

	<input file="ReminderMethod.csv" type="com.axelor.apps.debtRecovery.db.ReminderMethod">
		<bind column="methodeRelance_nom" to="name" />
		<bind column="methodeRelance_code" to="code" />
		<bind to="partnerConcernedSelect" column="methodeRelance_tiersARelancer" />
		<bind to="actContReminderMatrix" search="self.code = :methodeRelance_matriceActif" update="true">
			<bind to="code" column="methodeRelance_matriceActif" />
		</bind>
		<bind to="canInTerContReminderMatrix" search="self.code = :methodeRelance_matriceDsTerritoire" update="true">
			<bind to="code" column="methodeRelance_matriceDsTerritoire" />
		</bind>
		<bind to="canOutTerContReminderMatrix" search="self.code = :methodeRelance_matriceHrsTerritoire" update="true">
			<bind to="code" column="methodeRelance_matriceHrsTerritoire" />
		</bind>
	</input>


	<input file="typejournal.csv" type="com.axelor.apps.account.db.JournalType" >
		<bind to="koalaId" column="typejnal_id" />
		<bind to="name" column="typejnal_libelle" />
		<bind to="code" column="typejnal_code" />
	</input>

	<input file="journaux.csv" type="com.axelor.apps.account.db.Journal">
        <bind column="journ_id" to="koalaId" />
        <bind column="journ_code" to="code" />
        <bind column="journ_lib" to="name" />
		<bind column="journ_code_AGRESSO" to="exportCode"/>
		<bind column="journ_flag_recu" to="editReceiptOk" eval="journ_flag_recu == '1' ? true : false"/>
		<bind column="journ_flag_trop_percu" to="authorizedPaymentOk" eval="journ_flag_trop_percu == '1' ? true : false"/>
    	<bind to="type" search="self.koalaId = :journ_typejnal_id" update="true">
    		<bind to="koalaId" column="journ_typejnal_id"/>
    	</bind>
    	<bind column="journ_flag_pas_compta" to="notExportOk" eval="journ_flag_pas_compta == '1' ? true : false"/>
    	<bind column="journ_flag_obsolete" to="inactiveOk" eval="journ_flag_pas_compta == '1' ? true : false"/>
    </input>
    
    <input file="journauxAX.csv" type="com.axelor.apps.account.db.Journal"
		search="self.koalaId = :koalaId" update="true">
		<bind column="descriptionModel" to="descriptionModel" />
		<bind column="descriptionIdentificationOk" to="descriptionIdentificationOk" eval="descriptionIdentificationOk == '1' ? true : false"/>
	</input>
    
    <input file="sequenceFR_AX.csv" type="com.axelor.apps.administration.db.SequenceGeneric" >
    	<bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"/>
    	<bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    	<bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    	<bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    </input>
    
    <input file="modereglement.csv" type="com.axelor.apps.payment.db.PaymentMode">
		<bind column="moderegl_id" to="koalaId" />
		<bind column="moderegl_libelle" to="name" />
		<bind column="moderegl_code" to="code" />
        <bind column="moderegl_flag_prelevt" to="directDebitOk" eval="moderegl_flag_prelevt == '1'? true : false" />
		<bind to="bankJournal" search="self.koalaId = :moderegl_journal_id" update="true">
            <bind column="moderegl_journal_id" to="koalaId" />
        </bind>
        <bind column="moderegl_flag_contrat" to="contractOk" eval="moderegl_flag_contrat == '1'? true : false"/>
	</input>
    
    <input file="modereglementcompte.csv" type="com.axelor.apps.payment.db.PaymentMode"
        search="self.koalaId = :moderegl_id" update="true" call="com.axelor.csv.script.ImportPaymentMode:updateCompanyAccount">
        <bind column="moderegl_id" to="koalaId" />
    </input>

	<input file="tvacode.csv" type="com.axelor.apps.sale.db.Vat">
		<bind column="tva_id" to="koalaId" />
		<bind column="tva_code" to="code" />
		<bind column="tva_lib" to="name" />
	</input>

	<input file="tvataux.csv" type="com.axelor.apps.sale.db.VatLine">
		<bind column="tvataux_id" to="koalaId" />
		<bind to="vat" search="self.koalaId = :tvataux_tvacode_id"
			update="true">
			<bind column="tvataux_tvacode_id" to="koalaId" />
		</bind>
		<bind to="startDate"
			eval="!tvataux_datemea.empty ? tvataux_datemea.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$2'.padLeft(2,'0')+'-$1') : null" />
		<bind column="tvataux_taux" to="value"
			eval="!tvataux_taux.empty ? ((tvataux_taux.replace(',','.').replace('.00','.0')).toFloat()/100).round(3) : null" />
	</input>
	
	<input file="produit.csv" type="com.axelor.apps.sale.db.Product" call="com.axelor.csv.script.ImportProduct:updateProduct">
		<bind column="produit_id" to="koalaId" />
		<bind search="self.name = :produit_fluide_nom" to="fluid" update="true">
			<bind column="produit_fluide_nom" to="name" />
		</bind>
		<bind column="produit_code" to="code" />
		<bind search="self.name = :produit_categprod_libelle" to="productCategory" update="true">
			<bind column="produit_categprod_libelle" to="name" />
		</bind>
		<bind search="self.code = :produit_sousfamprod_code" to="productSubFamily" update="true">
			<bind column="produit_sousfamprod_code" to="code" />
		</bind>
		<bind column="produit_nom" to="name" />
		<bind column="produit_flag_prorata" to="serviceProratedOk" eval="produit_flag_prorata == '1'? true : false" />
		<bind column="produit_flag_integmensu" to="startedMonthDueOk" eval="produit_flag_integmensu == '1'? true : false" />
		<bind to="defaultVat" search="self.code = :produit_codeTVA_elec_inf36" update="true">
			<bind column="produit_codeTVA_elec_inf36" to="code" eval="produit_fluide_nom == 'Electricité' ? produit_codeTVA_elec_inf36 : produit_codeTVA_nonelec" />
		</bind>
		<bind to="priceType" column="produit_type_prix" eval="produit_type_prix == '1' ? 'indexed' : (produit_type_prix == '2' ? 'fixedInContract' : null)"/>
		<bind to="invoiceNatureSelect" eval="produit_typefactusce_id == '1' ? '2' : ( produit_type_prix == '3' ? '0' : '1')"/>
	</input>
	
	
	<input file="configurationcomptableFR.csv" type="com.axelor.apps.account.db.AccountManagement"
		call="com.axelor.csv.script.ImportAccountManagement:ignoreLinesAM">
		<bind column="id" to="importId"/>
		<bind to="typeSelect" eval="9"/>
		<bind to="company" search="self.name = :societe">
			<bind column="societe" to="name"/>
		</bind>
		<bind to="companyRoleSelect" eval="role_societe == 'FR' ? 0 : (role_societe == 'COM' ? 1 : '')" />
		<bind to="customerRoleSelect" eval="role_client == 'CF' ? 2 : (role_client == 'COM' ? 1 : (role_client == 'FR' ? 0 : ''))" />
		<!-- [eVolutis - Feature #813]  -->
		<bind to="userSegment" search="self.code = :segment" if="!segment?.empty">
			<bind column="segment" to="code" />
			<bind column="segment" to="name" />
		</bind>
		<bind to="userSubSegmentSelect" eval="sous_segment == 'Pro' ? 'professionnal' : (sous_segment == 'Res' ? 'residential' : null)" />
		<bind to="account" search="self.code = :compte_general AND self.company.name = :societe" update="true">
			<bind column="compte_general" to="code" />
		</bind>		
		<bind to="analyticAccountManagementList" if="!axe_metier?.empty">
			<bind to="analyticAxis" search="self.code = 'METIER'" update="true">
				<bind eval="'METIER'" to="code" />
			</bind>
			<bind to="analyticAccount" search="self.code = :axe_metier" update="true">
				<bind column="axe_metier" to="code" />
			</bind>
		</bind>
		<bind to="analyticAccountManagementList" if="!axe_activite?.empty">
			<bind to="analyticAxis" search="self.code = 'ACTIVITE'" update="true">
				<bind eval="'ACTIVITE'" to="code" />
			</bind>
			<bind to="analyticAccount" search="self.code = :axe_activite" update="true">
				<bind column="axe_activite" to="code" />
			</bind>
		</bind>
		<bind to="analyticAccountManagementList" if="!crb?.empty">
			<bind to="analyticAxis" search="self.code = 'CRB'"  update="true">
				<bind eval="'CRB'" to="code" />
			</bind>
			<bind to="analyticAccount" search="self.code = :crb" update="true">
				<bind column="crb" to="code" />
			</bind>
		</bind>
	</input>

	<input file="affectationcomptableFR.csv" type="com.axelor.apps.sale.db.Product" search="self.code = :code_produit" update="true"
		call="com.axelor.csv.script.ImportAccountManagement:importAMProduct">
		<bind column="code_produit" to="code" />
	</input>
	
	<input file="affectationcomptabletvaFR.csv" type="com.axelor.apps.account.db.AccountManagement"
		search="self.company.name = :societe AND self.monthlyPaymentOk = :compte_mensu_ok AND self.typeSelect = '2' AND self.account.code = :compte_general"
		call="com.axelor.csv.script.ImportAccountManagement:importAMTaxVat">
		<bind to="typeSelect" eval="2"/>
		<bind to="company" search="self.name = :societe" update="true">
			<bind column="societe" to="name" eval="!societe.empty? societe : 'DEFAULT'" />
		</bind>
		<bind to="monthlyPaymentOk" eval="compte_mensu_ok == 'Oui' ? true:false" />
		<bind to="account" search="self.code = :compte_general AND self.company.name = :societe" update="true">
			<bind column="compte_general" to="code" />
		</bind>
	</input>
	
	<input file="affectationcomptabletvaFR.csv" type="com.axelor.apps.sale.db.VatAccount" 
		call="com.axelor.csv.script.ImportVatAccount:ignoreLine">
		<bind to="vat" search="self.code = :code_tva" update="true">
			<bind to="code" column="code_tva" />
		</bind>
		<bind to="company" search="self.name = :societe" update="true">
			<bind column="societe" to="name" eval="!societe.empty? societe : 'DEFAULT'" />
		</bind>
		<bind to="account" search="self.code = :compte_acompte AND self.company.name = :societe" update="true">
			<bind column="compte_acompte" to="code" />
		</bind>
	</input>
	

	<input file="VatManagementLineProduct.csv" type="com.axelor.apps.sale.db.Product"
		search="self.code = :productCode" update="true">
		<bind to="vatManagement" search="self.code = :vatManagementCode">
			<bind to="code" column="vatManagementCode" />
			<bind to="vatManagementLineList">
				<bind to="condition" column="condition" />
				<bind to="vat" search="self.code = :vatCode" update="true">
					<bind to="code" column="vatCode" />
				</bind>
			</bind>
		</bind>
		<bind to="defaultVat" search="self.code = :vatManagementCode" update="true">
			<bind to="code" column="vatManagementCode" />
		</bind>
	</input>
	
	<input file="repbicdps7.csv" type="com.axelor.apps.contact.db.Bic">
		<bind to="countryCode" column="repBIC_codePays"/>
		<bind to="bankCode" column="repBIC_codeEtab"/>
		<bind to="sortCode" column="repBIC_codeGuich"/>
		<bind to="code" column="repBIC_codeBIC"/>
		<bind to="bankName" column="repBIC_nometab"/>
	</input>
	
	<input file="ribpayeur.csv" type="com.axelor.apps.contact.db.BankDetails"
		call="com.axelor.csv.script.ImportBankDetails:completIban">
		<bind column="ribpay_id" to="koalaId" />
		<bind search="self.koalaId = :ribpay_tierspay_id" to="payerPartner"
			update="true">
			<bind column="ribpay_tierspay_id" to="koalaId" />
		</bind>
		<bind column="ribpay_titulai" to="ownerName" />
		<bind column="ribapy_domici" to="bankAddress" />
		<bind column="ribpay_IBAN" to="iban" />
	</input>

	<input file="MatrixStructure.csv" type="com.axelor.apps.pricing.db.MatrixStructure">
		<bind to="sourceParam1" column="sourceParam1"
			eval="sourceParam1.empty ? null : sourceParam1" />
		<bind to="sourceParam2" column="sourceParam2"
			eval="sourceParam2.empty ? null : sourceParam2" />
		<bind to="sourceParam3" column="sourceParam3"
			eval="sourceParam3.empty ? null : sourceParam3" />
		<bind to="sourceParam4" column="sourceParam4"
			eval="sourceParam4.empty ? null : sourceParam4" />
		<bind to="sourceParam5" column="sourceParam5"
			eval="sourceParam5.empty ? null : sourceParam5" />
		<bind to="sourceParam6" column="sourceParam6"
			eval="sourceParam6.empty ? null : sourceParam6" />
		<bind to="sourceParam7" column="sourceParam7"
			eval="sourceParam7.empty ? null : sourceParam7" />
		<bind to="sourceParam8" column="sourceParam8"
			eval="sourceParam8.empty ? null : sourceParam8" />
		<bind to="sourceParam9" column="sourceParam9"
			eval="sourceParam9.empty ? null : sourceParam9" />
	</input>


	<input file="FormulaControl.csv" type="com.axelor.apps.formula.db.FormulaControl">
		<bind to="constituent" search="self.code = :constituentCode" update="true">
			<bind to="code" column="constituentCode" />
		</bind>
	</input>

	<input file="KeyPricingList.csv" type="com.axelor.apps.pricing.db.KeyPricingList" />

	<input file="PricingList.csv" type="com.axelor.apps.pricing.db.PricingList" />

	
	<input file="discount.csv" type="com.axelor.apps.pricing.db.UcDiscount">
		<bind column="koala_Id" to="koalaId"/>
		<bind column="fromQty" to="fromQty"/>
		<bind column="toQty" to="toQty"/>
		<bind to="socialDiscount" search="self.koalaId = :socialDiscount_koalaId" update="true">
			<bind column="socialDiscount_koalaId" to="koalaId"/>
		</bind>
	</input>
	
	<input file="discountline.csv" type="com.axelor.apps.pricing.db.UcDiscountLine">
		<bind column="fromDate" to="fromDate" eval="!fromDate.empty ? fromDate : null"/>
		<bind column="toDate" to="toDate" eval="!toDate.empty ? toDate : null"/>
		<bind column="discountPerc" to="discountPerc"/>
		<bind to="ucDiscount" search="self.koalaId = :ucDiscount_koalaId" update="true">
			<bind column="ucDiscount_koalaId" to="koalaId"/>
		</bind>
	</input>
	

	<input file="DiscountBand.csv" type="com.axelor.apps.contract.db.DiscountThresholdLine">
		<bind to="discountThreshold"
			search="self.threshold = :threshold AND self.discountBand.name = :name">
			<bind to="discountBand" search="self.name = :name">
				<bind column="name" to="name" />
			</bind>
			<bind column="threshold" to="threshold" />
		</bind>
		<bind column="fromDate" to="fromDate" />
		<bind column="toDate" to="toDate" eval="!toDate.empty ? toDate : null" />
		<bind column="discountPrice" to="discountPrice" />
	</input>

 	
	<input file="PricingListVersion.csv" type="com.axelor.apps.pricing.db.PricingListVersion">
		<bind to="toDate" eval="!toDate.empty ? toDate : null" column="toDate" />
	</input>

	<input file="PricingListLine1.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine2.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine3.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine4.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine5.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine6.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine7.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine8.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine9.csv" type="com.axelor.apps.pricing.db.PricingListLine" />

	<input file="PricingListLine10.csv" type="com.axelor.apps.pricing.db.PricingListLine">
		<bind to="pricingListVersion"
			search="self.fromDate = :from_date and self.pricingList.name = :pricing_list_name">
			<bind to="fromDate" column="from_date"
				eval="!from_date.empty ? from_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$1'.padLeft(2,'0')+'-$2') : null" />
			<bind to="toDate" column="to_date"
				eval="!to_date.empty ? to_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$1'.padLeft(1,'0')+'-$2') : null" />
			<bind to="activeOk" eval="true" />
			<bind search="self.name = :pricing_list_name" to="pricingList">
				<bind column="pricing_list_name" to="name" />
			</bind>
		</bind>
		<bind to="val1" column="val1" eval="!val1.empty ? val1.replace(',','.') : ''" />
		<bind to="val2" column="val2" eval="!val2.empty ? val2.replace(',','.') : ''" />
	</input>

	<input file="PricingListLine11.csv" type="com.axelor.apps.pricing.db.PricingListLine">
		<bind to="pricingListVersion"
			search="self.fromDate = :from_date and self.pricingList.name = :pricing_list_name">
			<bind to="fromDate" column="from_date"
				eval="!from_date.empty ? from_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$1'.padLeft(2,'0')+'-$2') : null" />
			<bind to="toDate" column="to_date"
				eval="!to_date.empty ? to_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$1'.padLeft(1,'0')+'-$2') : null" />
			<bind to="activeOk" eval="'true'" />
			<bind search="self.name = :pricing_list_name" to="pricingList">
				<bind column="pricing_list_name" to="name" />
			</bind>
		</bind>
		<bind to="val2" column="val2" eval="!val2.empty ? val2.replace(',','.') : ''" />
	</input>

	<input file="PricingListLine12.csv" type="com.axelor.apps.pricing.db.PricingListLine">
		<bind to="pricingListVersion"
			search="self.fromDate = :from_date and self.pricingList.name = :pricing_list_name">
			<bind to="fromDate" column="from_date"
				eval="!from_date.empty ? from_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$1'.padLeft(2,'0')+'-$2') : null" />
			<bind to="toDate" column="to_date"
				eval="!to_date.empty ? to_date.replaceAll('([0-9]{1,2})/([0-9]{1,2})/([0-9]{4})','$3'.padLeft(2,'0')+'-'+'$1'.padLeft(1,'0')+'-$2') : null" />
			<bind to="activeOk" eval="'true'" />
			<bind search="self.name = :pricing_list_name" to="pricingList">
				<bind column="pricing_list_name" to="name" />
			</bind>
		</bind>
		<bind to="val1" column="val1" eval="!val1.empty ? val1.replace(',','.') : ''" />
		<bind to="val2" column="val2" eval="!val2.empty ? val2.replace(',','.') : ''" />
		<bind to="val3" column="val3" eval="!val3.empty ? val3.replace(',','.') : ''" />
	</input>

	<input file="CalculationRule.csv" type="com.axelor.apps.sale.db.CalculationRule" />
	
	<input file="typetaxe.csv" type="com.axelor.apps.sale.db.Tax">
		<bind column="typetaxe_id" to="koalaId" />
		<bind column="typetaxe_libcourt" to="code" />
		<bind column="typetaxe_libelle" to="name" />
	</input>
	
	<input file="Tax.csv" type="com.axelor.apps.sale.db.Tax" search="self.code = :code">
		<bind column="constituentSet" to="constituentSet" search="self.code in :constituentSet"
			eval="constituentSet.split('\\|') as List" />
	</input>
	
	<input file="affectationcomptabletaxeFR.csv" type="com.axelor.apps.account.db.AccountManagement"
		search="self.company.name = :societe AND self.monthlyPaymentOk = :compte_mensu_ok AND self.typeSelect = '2' AND self.account.code = :compte_general AND self.companyRoleSelect = :role_societe"
		call="com.axelor.csv.script.ImportAccountManagement:importAMTaxVat">
		<bind to="typeSelect" eval="2"/>
		<bind to="company" search="self.name = :societe" update="true">
			<bind column="societe" to="name" eval="!societe.empty? societe : 'DEFAULT'" />
		</bind>
		<bind to="companyRoleSelect" column="role_societe" eval="role_societe == 'Fournisseur' ? 0 : (role_societe == 'Commercialisateur' ? 1 : '')" />
		<bind to="monthlyPaymentOk" eval="compte_mensu == 'Oui' ? true:false" />
		<bind to="account" search="self.code = :compte_general AND self.company.name = :societe" update="true">
			<bind column="compte_general" to="code" />
		</bind>
	</input>
	
	<input file="TaxLine.csv" type="com.axelor.apps.sale.db.TaxLine">
		<bind to="fromDate" eval="!date_debut.empty ? date_debut : null" />
		<bind to="toDate" eval="!date_fin.empty ? date_fin : null" />
	</input>

	<input file="VatManagementLineTaxLine.csv" type="com.axelor.apps.sale.db.TaxLine"
		search="self.code = :taxLineCode" update="true">
		<bind to="vatManagement" search="self.code = :vatManagementCode">
			<bind to="code" column="vatManagementCode" />
			<bind to="vatManagementLineList">
				<bind to="condition" column="condition" />
				<bind to="vat" search="self.code = :vatCode" update="true">
					<bind to="code" column="vatCode" />
				</bind>
			</bind>
		</bind>
		<bind to="defaultVat" search="self.code = :vatManagementCode" update="true">
			<bind to="code" column="vatManagementCode" />
		</bind>
	</input>

	<input file="PricingListLine_Tax1.csv" type="com.axelor.apps.pricing.db.PricingListLine">
		<bind to="pricingListVersion" search="self.fromDate = :pricingListVersionFromDate and self.pricingList.name = :pricingListName" update="true"/>
		<bind search="self.parameterId = :parameter1" to="parameter1">
			<bind column="parameter1" to="parameterId" />
		</bind>
		<bind search="self.name = :parameter2 and self.parameterType.code ='domTension'" to="parameter2" update="true">
			<bind column="parameter2" to="name" />
		</bind>
		<bind to="parameter9" column="parameter9" />
		<bind to="parameter10" column="parameter10" />
		<bind to="val1" column="val1" />
	</input>

	<input file="PricingListLine_Tax2.csv" type="com.axelor.apps.pricing.db.PricingListLine">
 		<bind to="pricingListVersion" search="self.sequence = :pricingListVersionSequence" update="true">
 			<bind to="sequence" column="pricingListVersionSequence" />
 		</bind>
 	</input>

	<input file="PricingListLine_Tax3.csv" type="com.axelor.apps.pricing.db.PricingListLine">
		<bind to="pricingListVersion"
			search="self.fromDate = :pricingListVersionFromDate and self.pricingList.name = :pricingListName">
			<bind to="fromDate" column="pricingListVersionFromDate" />
			<bind to="toDate" eval="pricingListVersionFromDate.replaceAll('([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})','$1'.padLeft(2,'0')+'-12-31')" />
			<bind to="activeOk" eval="true" />
			<bind to="pricingList" search="self.name = :pricingListName" update="true">
				<bind to="name" column="pricingListName" />
			</bind>
		</bind>
		<bind to="parameter1" search="self.name = :parameter1 and self.parameterType != null and self.parameterType.code = 'grd'" >
			<bind column="parameter1" to="name" />
		</bind>
		<bind to="parameter2" search="self.name = :parameter2 and self.parameterType != null and self.parameterType.code = 'optTarifaire'" >
			<bind column="parameter2" to="name" />
		</bind>
		<bind to="val1" column="val1" />
	</input>
	
	<input file="pitd.csv" type="com.axelor.apps.territory.db.Pitd">
		<bind to="koalaId" column="PITD_ID"/>
		<bind to="code" column="PITD_code"/>
		<bind to="name" column="PITD_Nom"/>
		<bind to="weatherZone" search="self.importId = :PITD_zonemeteo_id" update="true">
			<bind column="PITD_zonemeteo_id" to="importId" />
		</bind>
		<bind column="PITD_NTR" to="regionalTransportLevel"/>
	</input>
	
	<input file="commune.csv" type="com.axelor.apps.territory.db.Commune" search="self.koalaId = :commune_id" update="true">
		<bind to="pitd" search="self.koalaId = :commune_PITD_id" update="true">
			 <bind to="koalaId" column="commune_PITD_id"/>
		</bind>
	</input>

	<input file="contexotaxe.csv" type="com.axelor.apps.sale.db.ExemptionFromTax">
		<bind to="reasonExemption" search="self.koalaId = :contexotaxe_motif_id" update="true">
			<bind to="koalaId" column="contexotaxe_motif_id"/>
		</bind>
		<bind to="percentage" eval="!contexotaxe_pourc.empty ? (new BigDecimal(contexotaxe_pourc.replace(',','.')).signum() == 1 ? contexotaxe_pourc.replace(',','.') : contexotaxe_pourc.replace(',','.').negate()) :'0'"/>
		<bind to="tax" search="self.koalaId = :contexotaxe_typetaxe_id" update="true">
			<bind to="koalaId" column="contexotaxe_typetaxe_id"/>
		</bind>
		<bind to="amendment" search="self.contractLine.koalaId = :contexotaxe_cont_id" update="true">
			<bind to="koalaId" column="contexotaxe_cont_id"/>
			<bind to="taxExemptionOk" eval="contexotaxe_typetaxe_id=='1'?'false':'true'"/>
			<bind to="vatExemptionOk" eval="contexotaxe_typetaxe_id=='1'?'true':'false'"/>
		</bind>
	</input>

	
	<input file="reglevie.csv" type="com.axelor.apps.sale.db.SalesRule">
		<bind column="reglevie_id" to="importId"/>
		<bind column="reglevie_code" to="code"/>
		<bind to="contractLineTypeSelect" eval="reglevie_typevie == 'CDI' ? 1 : 0"/>
		<bind column="reglevie_duree" to="contractLineDuration"/>
		<bind to="tacitRenewalAutoOk" eval="reglevie_flag_tacitereconduction == '1' ? true : false"/>
		<bind column="reglevie_nbtacitereconduction_max" to="tacitRenewalMaxNbr"/>
		<bind column="reglevie_nbj_prevenance" to="tacitRenewalNotificationDays"/>
		<bind column="reglevie_nbj_deadline" to="tacitRenewalDuration"/>
		<bind column="reglevie_duree_reconduction" to="customerDeadLineDaysNbr"/>
	</input>
	
	<input file="reglevieaction.csv" type="com.axelor.apps.sale.db.SalesRuleAction">
		<bind to="salesRule" search="self.importId = :reglevieaction_reglevie_id" update="true">
			<bind to="importId" column="reglevieaction_reglevie_id"/>
		</bind>
		<bind to="actionSelect" eval="reglevieaction_typeaction_id == '1' ? 3 : reglevieaction_typeaction_id == '2' ? 4 : reglevieaction_typeaction_id == '3' ? 1 : 0"/>
		<bind to="recipientSelect" eval="reglevieaction_destin_type == 'GESTCOMM' ? 2 : 0"/>
	</input>
	
	<input file="AdministrationGeneralAX.csv" type="com.axelor.apps.administration.db.General"
		search="self.environment = 'fr'" update="true">
		<bind to="defaultExemptionVat" search="self.code = :defaultExemptionVat" update="true">
			<bind column="defaultExemptionVat" to="code" />
		</bind>
		<bind to="defaultUnit" search="self.code = :defaultUnit_code" update="true">
			<bind column="defaultUnit_code" to="code" />
		</bind>
		<bind to="chequeInterbankCode" search="self.code = :code_interbank_chq" update="true">
			<bind to="code" column="code_interbank_chq"/>
		</bind>
		<bind to="qasWsdlUrl" column="qas_url"/>
	</input>
	
	<input file="rabescfr.csv" type="com.axelor.apps.invoice.db.DiscountEngineLine"
		call="com.axelor.csv.script.ImportDiscountEngine:updateCode">
		<bind to="importId" column="rabescfr_id" />
		<bind to="code" column="rabescfr_id" />
		<bind to="amendment" search="self.koalaId = :rabescfr_cont_id" update="true">
			<bind column="rabescfr_cont_id" to="koalaId"/>
		</bind>
		<bind to="newLineOk" eval="true"/>
		<bind to="discountEngineId" column="rabescfr_sequence"/>
		<bind to="allCategoriesOk" eval="rabescfr_allcateg_flag == '1' ? true : false"/>
		<bind to="discountValue" eval="rabescfr_taux?.replace(',','.')"/>
		<bind to="priceDiscountOk" eval="rabescfr_type_appli == '1' ? false : true"/>
		<bind to="sameProductOk" eval="rabescfr_memeproduit_flag == '1' ? true : false"/>
		<bind to="discountProduct" search="self.koalaId = :rabescfr_prodrabesc_id" update="true">
			<bind column="rabescfr_prodrabesc_id" to="koalaId"/>
		</bind>
		<bind to="productCategorySet" search="self.koalaId = :rabescfr_categ_id" column="rabescfr_categ_id"/>
		<bind to="activeOk" eval="true"/>
		<bind to="referenceDateSelect" eval="0"/>
	</input>
	
	<input file="rabescfrproduit.csv" type="com.axelor.apps.invoice.db.DiscountEngineLine"
		search="self.koalaId = :rabescfrprod_rabescfr_id" update="true">
		<bind search="self.koalaId = :rabescfr_prodrabesc_id" to="productSet" column="rabescfr_prodrabesc_id"/>
	</input>
	
	<input file="GenericFieldEvent.csv" type="com.axelor.apps.event.db.GenericFieldEvent"/>
	
	<input file="Year.csv" type="com.axelor.apps.account.db.Year" call="com.axelor.csv.script.UpdateAll:ignoreYearLine">
		<bind to="name" column="name"/>
		<bind to="code" column="code"/>
		<bind to="toDate" column="toDate"/>
		<bind to="fromDate" column="fromDate"/>
		<bind to="company" search="self.name = :company_name" >
			<bind to="name" column="company_name"/>
		</bind>
		<bind to="status" search="self.code = :status_code" >
			<bind to="code" column="status_code"/>
		</bind>
	</input>

	<input file="societeAX.csv" type="com.axelor.apps.contact.db.Company"
		search="self.koalaId = :societe_id" call="com.axelor.csv.script.UpdateAll:updatePeriod">
		<bind column="societe_id" to="koalaId" />
	</input>
	
	<input file="societeAX.csv" type="com.axelor.apps.contact.db.Company"
		search="self.koalaId = :societe_id" call="com.axelor.csv.script.ImportAmendment:updateAmendmentPricingByConstituent" update="true">
		<bind column="societe_id" to="koalaId" />
	</input>
	
	<input file="societeAX.csv" type="com.axelor.apps.contact.db.Company"
		search="self.koalaId = :societe_id" update="true" call="com.axelor.csv.script.ImportCompany:updateCompanyClearanceAccountSet">
		<bind column="societe_id" to="koalaId" />
		<bind column="societe_nom" to="name" />
		<bind search="self.koalaId = :societe_tierscomm_id" to="marketerPartner"
			update="true">
			<bind column="societe_tierscomm_id" to="koalaId" />
		</bind>
		<bind search="self.koalaId = :societe_tiersfourn_id" to="providerPartner"
			update="true">
			<bind column="societe_tiersfourn_id" to="koalaId" />
		</bind>
		<bind search="self.koalaId = :societe_tiersGRD_id" to="elecDsoPartner"
			update="true">
			<bind column="societe_tiersGRD_id" to="koalaId" />
		</bind>
		<bind search="self.koalaId = :societe_tiersRE_id" to="brePartner"
			update="true">
			<bind column="societe_tiersRE_id" to="koalaId" />
		</bind>
		<bind to="journal" search="self.code = :journal_code" update="true">
			<bind column="journal_code" to="code" />
		</bind>
		<bind to="creditNoteJournal" search="self.code = :creditNoteJournal_code"
			update="true">
			<bind column="creditNoteJournal_code" to="code" />
		</bind>
		<bind to="customerAccount" search="self.code = :customerAccount_code AND self.company.name = :societe_nom"
			update="true">
			<bind column="customerAccount_code" to="code" />
		</bind>
		<bind to="bankJournal" search="self.code = :bankJournal_code"
			update="true">
			<bind column="bankJournal_code" to="code" />
		</bind>
		<bind to="technicalJournal" search="self.code = :technicalJournal_code"
			update="true">
			<bind column="technicalJournal_code" to="code" />
		</bind>
		<bind to="majorAccountJournal" search="self.code = :majorAccountJournal_code"
			update="true">
			<bind column="majorAccountJournal_code" to="code" />
		</bind>
		<bind to="invoiceDirectDebitJournal" search="self.code = :invoiceDirectDebitJournal_code"
			update="true">
			<bind column="invoiceDirectDebitJournal_code" to="code" />
		</bind>
		<bind to="accountClearanceJournal" search="self.code = :accountClearanceJournal_code"
			update="true">
			<bind column="accountClearanceJournal_code" to="code" />
		</bind>
		<bind to="reimbursementClientNature" search="self.code = :reimbursementClientNature_code"
			update="true">
			<bind column="reimbursementClientNature_code" to="code" />
		</bind>
	</input>
	
	<input file="societeAX.csv" type="com.axelor.apps.contact.db.Company"
		search="self.koalaId = :societe_id" update="true">
		<bind to="environmentSelect" eval="'fr'"/>
		<bind to="rejectJournal" search="self.code = :rejectJournal_code"
			update="true">
			<bind column="rejectJournal_code" to="code" />
		</bind>
		<bind to="reimbursementJournal" search="self.code = :reimbursementJournal_code"
			update="true">
			<bind column="reimbursementJournal_code" to="code" />
		</bind>
		<bind to="irrecoverableJournal" search="self.code = :irrecoverableJournal_code"
			update="true">
			<bind column="irrecoverableJournal_code" to="code" />
		</bind>
		<bind to="miscOperationJournal" search="self.code = :miscOperationJournal_code"
			update="true">
			<bind column="miscOperationJournal_code" to="code" />
		</bind>
		<bind to="technicalJournal" search="self.code = :technicalJournal_code"
			update="true">
			<bind column="technicalJournal_code" to="code" />
		</bind>
		<bind to="rejectionPaymentMode" search="self.code = :rejectionPaymentMode_code"
			update="true">
			<bind column="rejectionPaymentMode_code" to="code" />
		</bind>
		<bind to="rejectionMajorAccountPaymentMode" search="self.code = :rejectionMajorAccountPaymentMode_code"
			update="true">
			<bind column="rejectionMajorAccountPaymentMode_code" to="code" />
		</bind>
		<bind to="majorAccountRejectNumLimit" column="majorAccountRejectNumLimit" />
		<bind to="paymentScheduleRejectNumLimit" column="paymentScheduleRejectNumLimit" />
		<bind to="invoiceRejectNumLimit" column="invoiceRejectNumLimit" />
		<bind to="rejectImportPathAndFileName" column="invoiceRejectNumLimit" />
		<bind to="tempImportPathAndFileName" column="invoiceRejectNumLimit" />
		<bind to="rejectMonthlyPaymentMailModel" search="self.code = :rejectMonthlyPaymentMailModel_code"
			update="true">
			<bind column="rejectMonthlyPaymentMailModel_code" to="code" />
		</bind>
		<bind to="rejectMajorAccountMailModel" search="self.code = :rejectMajorAccountMailModel_code"
			update="true">
			<bind column="rejectMajorAccountMailModel_code" to="code" />
		</bind>
		<bind to="rejectPaymentScheduleMailModel" search="self.code = :rejectPaymentScheduleMailModel_code"
			update="true">
			<bind column="rejectPaymentScheduleMailModel_code" to="code" />
		</bind>
		<bind to="cashPositionVariationAccount" search="self.code = :cashPositionVariationAccount_code AND self.company.name = :societe_nom"
			update="true">
			<bind column="cashPositionVariationAccount_code" to="code" />
		</bind>
		<bind to="lowerThresholdReimbursement" column="lowerThresholdReimbursement" />
		<bind to="upperThresholdReimbursement" column="upperThresholdReimbursement" />
		<bind to="reimbursementAccount" search="self.code = :reimbursementAccount_code AND self.company.name = :societe_nom"
			update="true">
			<bind column="reimbursementAccount_code" to="code" />
		</bind>
		<bind to="reimbursementMailModel" search="self.code = :reimbursementMailModel_code"
			update="true">
			<bind column="reimbursementMailModel_code" to="code" />
		</bind>
		<bind to="exportPath" column="exportPath" />
		<bind to="reimbursementExportFolderPath" column="reimbursementExportFolderPath" />
		<bind to="cashRegisterMailModel" search="self.code = :cashRegisterMailModel_code"
			update="true">
			<bind column="cashRegisterMailModel_code" to="code" />
		</bind>
		<bind to="cashRegisterAddressEmail" column="cashRegisterAddressEmail" />
		<bind to="bankDetails" search="self.koalaId = :rib_koalaId" update="true">
			<bind to="koalaId" column="rib_koalaId"/>
		</bind>
		<bind to="logoPath" column="logoPath" />
		<bind to="mailTransitTime" column="mailTransitTime" />
		<bind to="doubtfulCustomerAccount" search="self.code = :doubtfulCustomerAccount_code AND self.company.name = :societe_nom" update="true">
			<bind column="doubtfulCustomerAccount_code" to="code" />
		</bind>
		<bind to="irrecoverableAccount" search="self.code = :irrecoverableAccount_code AND self.company.name = :societe_nom" update="true">
			<bind column="irrecoverableAccount_code" to="code" />
		</bind>
		<bind to="senderNumExportCFONB" column="senderNumExportCFONB" />
		<bind to="senderNameCodeExportCFONB" column="senderNameCodeExportCFONB" />
		<bind to="standardRateVat" search="self.code = :standardRateVat_code" update="true">
			<bind column="standardRateVat_code" to="code" />
		</bind>
		<bind to="irrecoverableStandardRateVat" search="self.code = :irrecoverableStandardRateVat_code" update="true">
			<bind column="irrecoverableStandardRateVat_code" to="code" />
		</bind>
		<bind to="payboxUrl" column="payboxUrl" />
		<bind to="payboxSite" column="payboxSite" />
		<bind to="payboxRang" column="payboxRang" />
		<bind to="payboxDevise" column="payboxDevise" />
		<bind to="payboxRetour" column="payboxRetour" />
		<bind to="payboxIdentifiant" column="payboxIdentifiant" />
		<bind to="payboxHashSelect" column="payboxHashSelect" />
		<bind to="payboxHmac" column="payboxHmac" />
		<bind to="payboxRetourUrlEffectue" column="payboxRetourUrlEffectue" />
		<bind to="payboxRetourUrlRefuse" column="payboxRetourUrlRefuse" />
		<bind to="payboxRetourUrlAnnule" column="payboxRetourUrlAnnule" />
		<bind to="generatedMailFilePath" column="generatedMailFilePath" />
		<bind to="generatedEmailFilePath" column="generatedEmailFilePath" />
		<bind to="generatedMailFileName" column="generatedMailFileName" />
		<bind to="generatedEmailFileName" column="generatedEmailFileName" />
	</input>
	
	<input file="Message.csv" type="com.axelor.apps.alarm.db.Message" />
	
	<input file="AlarmEngine.csv" type="com.axelor.apps.alarm.db.AlarmEngine" call="com.axelor.csv.script.ImportAlarm:checkAlarmQuery"/>
	
	<input file="MailModelTag.csv" type="com.axelor.apps.mail.db.MailModelTag">
		<bind to="tag" column="tag"/>
		<bind to="link" column="lien"/>
	</input>
	
    <input file="payboxAX.csv" type="com.axelor.apps.payment.db.Paybox">
		<bind to="name" column="name"/>
	</input>
	
</csv-inputs>
