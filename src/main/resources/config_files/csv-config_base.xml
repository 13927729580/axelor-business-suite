<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://apps.axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://apps.axelor.com/xml/ns/data-import http://apps.axelor.com/xml/ns/data-import/data-import_0.9.xsd">
  
<!--     IMPORT DU PACKAGE 'AUTH' -->
    
    <input file="auth_group.csv" separator=";" type="com.axelor.auth.db.Group" />
    
    <input file="auth_user.csv" separator=";" type="com.axelor.auth.db.User">
      <bind column="code_fr" to="code" />
      <!-- <bind column="code_en" to="code" /> -->
		  <bind column="name" to="name" />
		  <bind column="password_fr" to="password"/>
      <!-- <bind column="password_en" to="password"/> -->
      <bind to="group" search="self.code = :group" >
            <bind to="code" column="group"/>
      </bind>
	</input>
    
<!--     IMPORT DU PACKAGE 'BASE' -->   
    
  	<input file="base_status.csv" separator=";" type="com.axelor.apps.base.db.Status">
		<bind column="statut_id" to="koalaId" />
		<bind column="statut_libelle" to="name" />
		<bind column="statut_code" to="code" />
		<bind column="statut_flag_facture" to="invoiceStatusOK" eval="statut_flag_facture == '1'? true : false" />
	</input>
	
	<input file="base_team.csv" separator=";" type="com.axelor.apps.base.db.Team">
		<bind column="code_fr" to="code"/>
		<bind column="name_fr" to="name"/>
	</input>
	
	<input file="base_keyword.csv" separator=";" type="com.axelor.apps.base.db.Keyword">
		<bind column="keyWord_fr" to="keyWord"/>
	</input>
	
	<input file="base_source.csv" separator=";" type="com.axelor.apps.base.db.Source">
	    <bind column="name_fr" to="name"/>
	    <bind column="code_fr" to="code"/>
	</input>
	
	<input file="base_country.csv" separator=";" type="com.axelor.apps.base.db.Country" />
	
	<input file="base_region.csv" separator=";" type="com.axelor.apps.base.db.Region"/>
	
	<input file="base_departement.csv" separator=";" type="com.axelor.apps.base.db.Department" />
	
	<input file="base_canton.csv" separator=";" type="com.axelor.apps.base.db.Canton" />

	<input file="base_commune.csv" separator=";" type="com.axelor.apps.base.db.Commune" />
	
	<input file="base_address.csv" separator=";" type="com.axelor.apps.base.db.Address" />
	
	<input file="base_mailModel.csv" separator=";" type="com.axelor.apps.base.db.MailModel" />
	
	<input file="base_currency.csv" separator=";" type="com.axelor.apps.base.db.Currency" />
	
	<input file="base_general.csv" separator=";" type="com.axelor.apps.base.db.General" />
	
	<input file="base_partnerCategory.csv" separator=";" type="com.axelor.apps.base.db.PartnerCategory">
		<bind column="name_fr_FR" to="name"/>	
	</input>
	
<!-- 	<input file="base_partner.csv" separator=";" type="com.axelor.apps.base.db.AccountingSituation" call="com.axelor.csv.script.ImportPartner:importAccountingSituation"> -->
<!-- 		<bind column="partner" to="accountingSituationList"/> -->
<!-- 	</input> -->
	
	<!-- A BESOIN de paymentMode, fichier vide actuellement, il faudra faire un update -->
	<input file="base_partner.csv" separator=";" type="com.axelor.apps.base.db.Partner">
		<bind column="companySet_code" to="companySet" search="self.code in :companySet_code" eval="companySet_code.split('\\|') as List"/>
	</input>
	
	<!-- A BESOIN DE PARTNER -->
	<input file="base_bankDetails.csv" separator=";" type="com.axelor.apps.base.db.BankDetails" >
		<bind to="partner" column="partner_importId" search="self.importId =:partner_importId">
			<bind to="importId" column="partner_importId"/>
		</bind>
	</input>
	
<!--	<input file="base_partner.csv" separator=";" search="self.importId = :importId" update="true" type="com.axelor.apps.base.db.Partner" >
 		<bind column="bankDetails.importId" to="bankDetails"/>
		<bind to="bankDetails" search="self.importId = :bankDetails.importId" >
            <bind to="importId" column="bankDetails.importId"/>
    </bind>
	</input> -->
	
	<input file="base_company.csv" separator=";" type="com.axelor.apps.base.db.Company"/>
	
	<input file="base_agency.csv" separator=";" type="com.axelor.apps.base.db.Agency"/>
	
	<input file="base_userInfo.csv" separator=";" type="com.axelor.apps.base.db.UserInfo">
<!--       TODO A COMPLETER -->
		<bind column="firstName" to="name" />
		<bind column="lastName" to="password"/>
      	<bind to="internalUser" search="self.code = :code_fr" >
        <bind to="code" column="code_fr"/>
        <bind column="companySet_code" to="companySet" search="self.code in :companySet_code" eval="companySet_code.split('\\|') as List"/>
      </bind>
	</input>  

	<input file="base_currencyConversionLine.csv" separator=";" type="com.axelor.apps.base.db.CurrencyConversionLine" />
	
	<input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence" >
    	<bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"/>
    	<bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    	<bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    	<bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    </input>
    
 	<input file="base_companyDepartment_Prod.csv" separator=";" type="com.axelor.apps.base.db.Department">
 		<bind column="id" to="importId"/>
 		<bind column="code_fr" to="code"/>
 		<bind column="name_fr" to="name"/>
<!--  		<bind column="code_en" to="code"/> -->
<!--  		<bind column="name_en" to="name"/> -->
 	</input>
 	
<!--  	<input file="base_companyDepartment_Serv.csv" separator=";" type="com.axelor.apps.base.db.Department"> -->
<!--  		<bind column="id" to="importId"/> -->
<!--  		<bind column="code_fr" to="code"/> -->
<!--  		<bind column="name_fr" to="name"/> -->
<!--  		<bind column="code_en" to="code"/> -->
<!--  		<bind column="name_en" to="name"/> -->
<!--  	</input> -->

	
	<input file="base_unit.csv" separator=";" type="com.axelor.apps.base.db.Unit">
		<bind column="name_fr_FR" to="name" />
		<bind column="code_fr_FR" to="code" />
	</input>

	<!-- TODO BIND EN FONCTION DE LA LANGUE POUR LES 2 CI-dessous -->
	<input file="base_productCategory.csv" separator=";" type="com.axelor.apps.base.db.ProductCategory">
		<bind column="code_fr" to="code"/>	
		<bind column="name_fr" to="name"/>	
	</input>
	
	<input file="base_productCategory.csv" separator=";" search="self.code = :code_fr and self.name = :name_fr" type="com.axelor.apps.base.db.ProductCategory">
		<bind column="code_fr" to="code" update="true"/>	
		<bind column="name_fr" to="name" update="true"/>	
	</input>

	<input file="base_productFamily.csv" separator=";" type="com.axelor.apps.base.db.ProductFamily">
		<bind column="name_fr_FR" to="name"/>
		<bind column="code_fr_FR" to="code"/>
	</input>
	
	<input file="base_product.csv" separator=";" type="com.axelor.apps.base.db.Product">
		<bind column="name_fr" to="name"/>
		<bind column="code_fr" to="code"/>
		<bind column="description_fr" to="description"/>
	</input>

 	<input file="base_partner.csv" separator=";" search="self.importId = :importId" update="true" type="com.axelor.apps.base.db.Partner">
		<bind column="companySet_code" to="companySet" search="self.code in :companySet_code" eval="companySet_code.split('\\|') as List"/>
	</input>

<!--     IMPORT DU PACKAGE 'ACCOUNT' -->     

	<input file="account_journalType.csv" separator=";" type="com.axelor.apps.account.db.JournalType" />
	
	<input file="account_journal.csv" separator=";" type="com.axelor.apps.account.db.Journal" />
	
	<input file="account_account.csv" separator=";" type="com.axelor.apps.account.db.Account" >
		<bind to="name" column="name_fr_FR"/>
<!-- 		<bind to="name" column="name_en_EN"/> -->
	</input>
	
	<input file="account_paymentMode.csv" separator=";" type="com.axelor.apps.account.db.PaymentMode" />
	
	<input file="account_paymentCondition.csv" separator=";" type="com.axelor.apps.account.db.PaymentCondition">
		<bind column="name_fr_FR" to="name"/>
		<bind column="code_fr_FR" to="code"/>
	</input>
	
	<input file="account_analyticAxis.csv" separator=";" type="com.axelor.apps.account.db.AnalyticAxis" />
	
	<input file="account_analyticAccount.csv" separator=";" type="com.axelor.apps.account.db.AnalyticAccount" />
	
	<input file="account_year.csv" separator=";" type="com.axelor.apps.account.db.Year">
        <bind to="name" column="name"/>
        <bind to="code" column="code"/>
        <bind to="toDate" column="toDate"/>
        <bind to="fromDate" column="fromDate"/>
<!--         <bind to="company" search="self.code = :company_name" > -->
<!--             <bind to="name" column="company_name"/> -->
<!--         </bind> -->
        <bind to="status" search="self.code = :status_code" >
            <bind to="code" column="status_code"/>
        </bind>
    </input>
	
	<input file="base_company.csv" separator=";" type="com.axelor.apps.base.db.Company" search="self.importId = :importId" update="true" call="com.axelor.csv.script.UpdateAll:updatePeriod">
		<bind column="importId" to="importId"/>
	</input>
	
	
	<!-- TO DO Remplir le M2O activeVatLine par un update en utilisant le code TVA -->
	<input file="account_vat.csv" separator=";" type="com.axelor.apps.account.db.Vat">
		<bind column="code" to="code" />
        <bind column="name" to="name" />
        <bind column="importId" to="importId" />
	</input>
	
	<input file="account_vatLine.csv" separator=";" type="com.axelor.apps.account.db.VatLine" />
	
	<input file="account_vat.csv" separator=";" update="true" search="self.importId = :importId" type="com.axelor.apps.account.db.Vat">
<!-- 		<bind column="_activeVatLine" to="activeVatLine"/> -->
		<bind to="activeVatLine" search="self.importId = :_activeVatLine" update="true">
			<bind column="_activeVatLine" to="importId"/>
		</bind>
	</input>
	
	<input file="account_interBankCode.csv" separator=";" type="com.axelor.apps.account.db.InterbankCodeLine">
        <bind column="code_rejet" to="code" />
        <bind column="libelle_rejet" to="name" />
        <bind column="description_rejet" to="description" />
        <bind column="transferCfonbOk" to="transferCfonbOk" eval="transferCfonbOk == 't' ? true : false"/>
        <bind column="prelevement" to="directDebitAndTipCfonbOk" eval="prelevement == 't' ? true : false"/>
        <bind column="prelevement_sepa" to="directDebitSepaOk" eval="prelevement_sepa == 't' ? true : false"/>
        <bind column="lcr_bor" to="lcrBorOk" eval="lcr_bor == 't' ? true : false"/>
        <bind column="cheque" to="chequeOk" eval="cheque == 't' ? true : false"/>
        <bind column="rejet_technique" to="technicalRejectOk" eval="rejet_technique == 't' ? true : false"/>
        <bind to="interbankCode" search="self.code = :code_fichier">
            <bind column="code_fichier" to="code"/>
            <bind column="nom_fichier" to="name"/>
            <bind column="date_fin" to="endDate" eval="date_fin ? date_fin : null"/>
            <bind column="description_fichier" to="description"/>
        </bind>
    </input>
	
	
	
	<input file="account_reminderLevel.csv" separator=";" type="com.axelor.apps.account.db.ReminderLevel" />
	
	<input file="account_reminderMethod.csv" separator=";" type="com.axelor.apps.account.db.ReminderMethod" />
	
	<input file="account_reminderMethodLine.csv" separator=";" type="com.axelor.apps.account.db.ReminderMethodLine" />
	
	
	<input file="account_accountManagement.csv" separator=";" type="com.axelor.apps.account.db.AccountManagement" >
		<bind search="self.code = :cashAccount_code and self.company.code = :company.code" to="cashAccount"/>
		<bind search="self.code = :saleAccount_code and self.company.code = :company.code" to="saleAccount"/>
		<bind search="self.code = :purchaseAccount_code and self.company.code = :company.code" to="purchaseAccount"/>
	</input>
	
	<input file="account_analyticAccountManagement.csv" separator=";" type="com.axelor.apps.account.db.AnalyticAccountManagement" />
	
	
	<input file="account_reminderConfigLine.csv" separator=";" type="com.axelor.apps.account.db.ReminderConfigLine" />
	
	<input file="account_invoiceLineType.csv" separator=";" type="com.axelor.apps.account.db.InvoiceLineType">
		<bind column="importId" to="importId"/>
		<bind column="code_fr" to="code"/>
		<bind column="name_fr" to="name"/>
	</input>
	
	
<!-- 	Deuxième passe sur le package 'base' pour prendre en compte les éléments du package account  -->

	<input file="base_general.csv" separator=";" type="com.axelor.apps.base.db.General"  search="self.importId = :importId" update="true">
      	<bind to="defaultExemptionVat" search="self.code = :defaultExemptionVat_code">
          	<bind column="defaultExemptionVat_code" to="code"/>
      	</bind>
		<bind to="qasWsdlUrl" column="qas_url"/>
	</input>

	<input file="account_journal.csv" separator=";"  type="com.axelor.apps.account.db.Journal" search="self.importId = :importId" update="true" >
		<bind to="journal" search="self.code = :journal.code" >
      <bind to="code" column="journal.code"/>
    </bind>
	</input>
	
	<input file="base_partner.csv" separator=";" type="com.axelor.apps.base.db.Partner" search="self.importId = :importId" 
	update="true" call="com.axelor.csv.script.ImportPartner:importAccountingSituation"/>
	
	<input file="base_bankDetails.csv" separator=";" search="self.importId = :partner_importId" update="true" type="com.axelor.apps.base.db.Partner" >
		<bind to="bankDetails" search="self.importId = :importId" >
            <bind to="importId" column="importId"/>
    	</bind>
	</input>
	
	
<!--     IMPORT DU PACKAGE 'CRM' --> 	

	<input file="crm_lead.csv" separator=";" type="com.axelor.apps.crm.db.Lead">
		<bind column="description_fr_FR" to="description"/>
		<bind column="jobTitle_fr" to="jobTitle"/>
	</input>
	
	<input file="crm_meetingType.csv" separator=";" type="com.axelor.apps.crm.db.MeetingType">
		<bind column="name_fr_FR" to="name"/>
		<bind column="code_fr_FR" to="code"/>
	</input>
	
	
<!--     IMPORT DU PACKAGE 'ORGANISATION' --> 	
	
	<input file="organisation_degree.csv" separator=";" type="com.axelor.apps.organisation.db.Degree"/>
	
	<input file="organisation_personalInfo.csv" separator=";" type="com.axelor.apps.organisation.db.PersonalInfo"/>
	
	<input file="organisation_universities.csv" separator=";" type="com.axelor.apps.organisation.db.TrainingCenter"/>
	
	<input file="organisation_candidate.csv" separator=";" type="com.axelor.apps.organisation.db.Candidate">
		<bind column="address" to="address" search="self.importId = :address" update="true"/>
		<bind column="toolKeywordSet_importId" to="toolKeywordSet" search="self.importId in :toolKeywordSet_importId" eval="toolKeywordSet_importId.split('\\|') as List"/>
		<bind column="fieldKeywordSet_importId" to="fieldKeywordSet" search="self.importId in :fieldKeywordSet_importId" eval="fieldKeywordSet_importId.split('\\|') as List"/>
		<bind column="jobKeywordSet_importId" to="jobKeywordSet" search="self.importId in :jobKeywordSet_importId" eval="jobKeywordSet_importId.split('\\|') as List"/>
	</input>
	
<!-- 	<input file="organisation_employee_Prod.csv" separator=";" type="com.axelor.apps.organisation.db.Employee"> -->
<!-- 		<bind column="toolKeywordSet_importId" to="toolKeywordSet" search="self.importId in :toolKeywordSet_importId" eval="toolKeywordSet_importId.split('\\|') as List"/> -->
<!-- 		<bind column="fieldKeywordSet_importId" to="fieldKeywordSet" search="self.importId in :fieldKeywordSet_importId" eval="fieldKeywordSet_importId.split('\\|') as List"/> -->
<!-- 		<bind column="jobKeywordSet_importId" to="jobKeywordSet" search="self.importId in :jobKeywordSet_importId" eval="jobKeywordSet_importId.split('\\|') as List"/> -->
<!-- 	</input> -->
	
	<input file="organisation_employee_Serv.csv" separator=";" type="com.axelor.apps.organisation.db.Employee">
		<bind column="toolKeywordSet_importId" to="toolKeywordSet" search="self.importId in :toolKeywordSet_importId" eval="toolKeywordSet_importId.split('\\|') as List"/>
		<bind column="fieldKeywordSet_importId" to="fieldKeywordSet" search="self.importId in :fieldKeywordSet_importId" eval="fieldKeywordSet_importId.split('\\|') as List"/>
		<bind column="jobKeywordSet_importId" to="jobKeywordSet" search="self.importId in :jobKeywordSet_importId" eval="jobKeywordSet_importId.split('\\|') as List"/>
	</input>
	
<!--     IMPORT DU PACKAGE 'SUPPLY CHAIN' --> 	
	  	
</csv-inputs>

