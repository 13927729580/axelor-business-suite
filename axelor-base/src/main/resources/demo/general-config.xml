<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_4.0.xsd">
  
<!--     IMPORT DU PACKAGE 'AUTH' -->

    <input file="auth_permission.csv" separator=";" type="com.axelor.auth.db.Permission" search="self.name = :name"/>
    
    <input file="meta_file.csv" separator=";" type="com.axelor.meta.db.MetaFile" search="self.fileName = :fileName"/>
    
    <input file="auth_role.csv" separator=";" type="com.axelor.auth.db.Role"  search="self.name = :name">
        <bind column="permissions" to="permissions" search="self.name in :permissions" eval="permissions.split('\\|') as List"/>
    </input>
    
    <input file="auth_group.csv" separator=";" type="com.axelor.auth.db.Group" search="self.code = :code">
      <bind column="permissions" to="permissions" search="self.name in :permissions" eval="permissions.split('\\|') as List"/>
      <bind column="roles" to="roles" search="self.name in :roles" eval="roles.split('\\|') as List"/>
    </input>
    
    <input file="auth_user.csv" separator=";" type="com.axelor.auth.db.User"  search="self.code = :code" call="com.axelor.csv.script.ImportUser:importUser"/>
    
<!--     IMPORT DU PACKAGE 'BASE' -->

	<input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence" search="self.importId = :importId">
    	<bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"/>
    	<bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    	<bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    	<bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    </input>
	
<!-- 	<input file="base_import_configuration.csv" separator=";" type="com.axelor.apps.base.db.ImportConfiguration"> -->
<!-- 		<bind to="user" search="self.code = 'admin' " update="true" /> -->
<!-- 	</input> -->
		
	<input file="base_birtTemplate.csv" separator=";" type="com.axelor.apps.base.db.BirtTemplate" search="self.importId = :importId" />
	
	<input file="base_birtTemplateParameter.csv" separator=";" type="com.axelor.apps.base.db.BirtTemplateParameter" search="self.importId = :importId"  />
	
	<input file="base_printSetting.csv" separator=";" type="com.axelor.apps.base.db.PrintingSettings" search="self.importId = :importId"  />
	     
	<input file="base_template.csv" separator=";" type="com.axelor.apps.message.db.Template" search="self.name = :name" />
    
	<input file="base_team.csv" separator=";" type="com.axelor.apps.base.db.Team" search="self.importId = :importId"  />

	<input file="base_keyword.csv" separator=";" type="com.axelor.apps.base.db.Keyword" search="self.importId = :importId"  />
	
	<input file="base_source.csv" separator=";" type="com.axelor.apps.base.db.Source" search="self.code = :code"/>
	
	<input file="base_country.csv" separator=";" type="com.axelor.apps.base.db.Country" search="self.importId = :importId"  />
	
	<input file="base_region.csv" separator=";" type="com.axelor.apps.base.db.Region"/>
	
	<input file="base_departement.csv" separator=";" type="com.axelor.apps.base.db.Department" />
	
	<input file="base_indicator_generator.csv" separator="," type="com.axelor.apps.base.db.IndicatorGenerator"/>
	
	<input file="base_canton.csv" separator=";" type="com.axelor.apps.base.db.Canton" search="self.code = :code"/>

	<input file="base_city.csv" separator=";" type="com.axelor.apps.base.db.City" search="self.importId = :importId">
	   <bind to="country" search="self.alpha3Code = 'FRA'" update="true" />
	</input>
	
	<input file="base_address.csv" separator=";" type="com.axelor.apps.base.db.Address" search="self.importId = :importId" call="com.axelor.csv.script.ImportAddress:importAddress">
	  	<bind to="city" search="concat(self.zip,' ',self.name) = :addressL6" update="true" />
	</input>
	
	<input file="base_currency.csv" separator=";" type="com.axelor.apps.base.db.Currency" search="self.code = :code"  />
	
	<input file="base_unit.csv" separator=";" type="com.axelor.apps.base.db.Unit" search="self.importId = :importId"  />
	
	<input file="base_unitConversion.csv" separator=";" type="com.axelor.apps.base.db.UnitConversion" search="self.importId = :importId"/>
	
	<input file="base_partnerCategory.csv" separator=";" type="com.axelor.apps.base.db.PartnerCategory" search="self.importId = :importId"  />
	
	<input file="base_scheduler.csv" separator=";" type="com.axelor.apps.base.db.Scheduler" search="self.importId = :importId"  />
	
	<input file="base_duration.csv" separator=";" type="com.axelor.apps.base.db.Duration" />
	
	<!-- A BESOIN de paymentMode, fichier vide actuellement, il faudra faire un update -->
	<input file="base_partner.csv" separator=";" type="com.axelor.apps.base.db.Partner" search="self.importId = :importId" call="com.axelor.csv.script.ImportPartner:importPartner">
		<bind to="partnerSeq" eval="call:com.axelor.apps.base.service.administration.SequenceService:getSequenceNumber(com.axelor.apps.base.db.IAdministration.PARTNER)" />
		<bind to="emailAddress" search="self.address = :email">
			<bind to="address" column="email" />
		</bind>
		<bind to="partnerAddressList" search="self.address.importId = :address" if="address != null &amp;&amp; isContact == 'false'">
		    <bind to="address" search="self.importId = :address" update="true" />
		    <bind to="isInvoicingAddr" eval="true" />
		    <bind to="isDeliveryAddr" eval="true" />
		    <bind to="isDefaultAddr" eval="true" />
		</bind>
		<bind to="contactAddress" search="self.importId = :address" if="address != null &amp;&amp; isContact == 'true'" update="true" />
	</input>
	
	<!-- A BESOIN DE PARTNER -->
	<input file="base_bankDetails.csv" separator=";" type="com.axelor.apps.base.db.BankDetails" >
		<bind to="partner" column="partner_importId" search="self.importId =:partner_importId" update="true" />
		<bind to="isDefault" eval="true" />
	</input>
	
	<input file="base_company.csv" separator=";" type="com.axelor.apps.base.db.Company" search="self.importId = :importId" call="com.axelor.csv.script.ImportCompany:importCompany"/>
	
	<input file="base_year.csv" separator=";" type="com.axelor.apps.base.db.Year" search="self.importId = :importId"/>
	
	<input file="base_currencyConversionLine.csv" separator=";" type="com.axelor.apps.base.db.CurrencyConversionLine" search="self.importId = :importId">
	    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)" column="fromDate"/>
		<bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)" column="toDate" />
	</input>	    
	
 	<input file="base_companyDepartment.csv" separator=";" type="com.axelor.apps.base.db.CompanyDepartment">
 		<bind column="id" to="importId"/>
 		<bind column="code" to="code"/>
 		<bind column="name" to="name"/>
 	</input>
 	
	<input file="base_productFamily.csv" separator=";" type="com.axelor.apps.base.db.ProductFamily" search="self.code = :code" />
	
	<input file="base_productCategory.csv" separator=";" type="com.axelor.apps.base.db.ProductCategory" search="self.code = :code" />
	
	<input file="base_product.csv" separator=";" type="com.axelor.apps.base.db.Product" search="self.importId = :importId" call="com.axelor.csv.script.ImportProduct:importProduct">
		<bind to="startDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(startDate)" column="startDate"/>
		<bind to="createdOn" eval="call:com.axelor.csv.script.ImportDateTime:importDate(startDate)" column="startDate"/>
	</input>
	
	<input file="base_supplierCatalog.csv" separator=";" type="com.axelor.apps.base.db.SupplierCatalog"/>
	
 	<input file="base_partner.csv" separator=";" search="self.importId = :importId" update="true" type="com.axelor.apps.base.db.Partner">
		<bind column="companySet_importId" to="companySet" search="self.importId in :companySet_importId" eval="companySet_importId.split('\\|') as List" update="true"/>
		<bind to="mainPartner" search="self.importId = :mainPartner_importId" update="true" />
	</input>
	
	<input file="base_company.csv" separator=";" type="com.axelor.apps.base.db.Company" search="self.importId = :importId" update="true" call="com.axelor.csv.script.UpdateAll:updatePeriod">
		<bind column="importId" to="importId"/>
	</input>
	
	<input file="base_general.csv" separator=";" type="com.axelor.apps.base.db.General"  search="self.importId = :importId" update="true">
      	<bind to="defaultExemptionTax" search="self.code = :defaultExemptionTax_code" update="true">
          	<bind column="defaultExemptionTax_code" to="code"/>
      	</bind>
		<bind to="qasWsdlUrl" column="qas_url"/>
		<bind to="manageBudget" column="manageBudget"/>
		<bind to="manageMultiBudget" column="manageMultiBudget"/>
        <bind to="statusSelectBudget" column="statusSelectBudget"/>
	</input>

	<input file="base_company.csv" separator=";" type="com.axelor.apps.base.db.Company" search="self.importId = :importId" update="true">
		<bind column="bankDetailsSet_id" to="bankDetailsSet" search="self.importId in :bankDetailsSet_id" update="true" />
	</input> 
	
	<input file="base_general.csv" separator=";" type="com.axelor.apps.base.db.General" update="true" search="self.importId = :importId" call="com.axelor.csv.script.ValidateSupplyChain:validateSupplyChain">
		<bind to="allowSusbcriptionSaleOrder" column="allowSusbcriptionSaleOrder"/>
	</input>
		
	
</csv-inputs>

