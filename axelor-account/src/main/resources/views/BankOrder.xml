<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_4.0.xsd">
    
    <grid name="bank-order-bank-to-bank-grid" orderBy="-bankOrderDate" title="Bank Orders" model="com.axelor.apps.account.db.BankOrder" canDelete="false">
        <toolbar>
    		<button name="merge" title="Merge bank orders" onClick="action-method-bank-order-merge" prompt="Are you sure you want merge the selected bank orders ?"/>
    	</toolbar>
        <field name="bankOrderSeq"/>
        <field name="bankOrderDate"/>
        <field name="senderCompany"/>
        <field name="amount"/>
        <field name="currency"/>
        <field name="senderReference"/>
        <field name="nbOfLines"/>
        <field name="statusSelect"/>
    </grid>
    
    <grid name="bank-order-grid" orderBy="-bankOrderDate" title="Bank Orders" model="com.axelor.apps.account.db.BankOrder" canDelete="false">
    	<toolbar>
    		<button name="merge" title="Merge bank orders" onClick="action-method-bank-order-merge" prompt="Are you sure you want merge the selected bank orders ?"/>
    	</toolbar>
        <field name="bankOrderSeq"/>
        <field name="partnerTypeSelect"/>
        <field name="bankOrderDate"/>
        <field name="senderCompany"/>
        <field name="amount"/>
        <field name="bankOrderCurrency"/>
        <field name="senderReference"/>
        <field name="nbOfLines"/>
        <field name="statusSelect"/>
    </grid>
    
	<form name="bank-order-form" title="Bank Order" model="com.axelor.apps.account.db.BankOrder" canDelete="false"
	onNew="action-group-bank-order-onnew" 
	onLoad="action-bank-order-line-attrs-on-load"> 
		<toolbar>
			<button name="print" title="Print" icon="fa-print" onClick="action-bank-order-method-print"/>
		</toolbar>
  		<panel name="main" colSpan="12" readonlyIf="statusSelect &gt;= 3">
    		<field name="statusSelect" showTitle="false" widget="NavSelect" colSpan="12" selection-in="[1,3,4,5,6]" showIf="orderTypeSelect == 3 || orderTypeSelect == 5"/>
    		<field name="statusSelect" showTitle="false" widget="NavSelect" colSpan="12" showIf="orderTypeSelect != 3 &amp;&amp; orderTypeSelect != 5"/>
  			<field name="bankOrderSeq" css="label-bold bold" colSpan="12"/>
    		<field name="bankOrderDate" css="label-bold bold" colSpan="6" hidden="true" hideIf="isMultiDate"/>
    		<field name="orderTypeSelect" css="label-bold bold" colSpan="6" readonly="true"/>
    		<field name="paymentMode" css="label-bold bold" colSpan="6" domain="self.orderTypeSelect = :orderTypeSelect" onChange="action-bank-order-record-payment-mode-change,action-bank-order-record-bank-order-file-format-change"/>
    		<field name="bankOrderFileFormat" domain="self.orderTypeSelect = :orderTypeSelect" colSpan="6" onChange="action-bank-order-record-bank-order-file-format-change"/>
    		<field name="partnerTypeSelect" showIf="orderTypeSelect != 1" css="label-bold bold" colSpan="6"/>
    		<field name="isMultiDate" hidden="true"/>
    		<field name="isMultiCurrency" hidden="true"/>
  		</panel>
		<panel name="senderInfo" title="Sender Info." readonlyIf="statusSelect &gt;= 3">
			<field name="senderCompany" grid-view="company-grid" form-view="company-form" onChange="action-bank-order-record-sender-company-change"/>
			<field name="senderBankDetails" grid-view="bank-details-grid" form-view="bank-details-form" onSelect="action-bank-order-attrs-bank-details-domain"/>
			
			<panel hidden="true" hideIf="isMultiCurrency" >
				<field name="bankOrderTotalAmount" colSpan="8" readonly="true"/>
				<field name="bankOrderCurrency" grid-view="currency-grid" form-view="currency-form" colSpan="4" readonlyIf="orderTypeSelect == 2 || orderTypeSelect == 3"/>
			</panel>
			<panel readonly="true">
				<field name="companyCurrencyTotalAmount" colSpan="8"/>
				<field name="companyCurrency" grid-view="currency-grid" form-view="currency-form" colSpan="4"/>
			</panel>
			
			<field name="senderReference"/>
			<field name="senderLabel"/>
		</panel>
		<panel name="bankOrderLinesPanel" title="Bank Order Lines" readonlyIf="statusSelect &gt;= 3">
			<field name="bankOrderLineList" colSpan="12" showTitle="false">
				<editor x-layout="table" x-viewer="true" >
					<field name="sequence" css="label-bold bold" readonly="true" hideIf="sequence == null" colSpan="6"/>
					<spacer colSpan="6"/>
					<panel colSpan="6" itemSpan="12">
						<field name="receiverCompany" hideIf="bankOrder.orderTypeSelect != 1" css="label-bold bold" onChange="action-bank-order-line-record-receiver-company-change" form-view="company-form" grid-view="company-grid" />
						<field name="partner" hideIf="bankOrder.orderTypeSelect == 1" form-view="partner-form" grid-view="partner-grid" css="label-bold bold" onSelect="action-bank-order-line-attrs-partner-domain" onChange="action-bank-order-line-record-partner-onchange"/>
					</panel>
					<field name="receiverBankDetails" onSelect="action-bank-order-line-attrs-bank-details-domain"/>
					<field name="bankOrderAmount" colSpan="4"/>
					<panel stacked="true" colSpan="2" itemSpan="12">
						<field name="bankOrder.bankOrderCurrency" hidden="true" hideIf="bankOrder.isMultiCurrency"/>
						<field name="bankOrderCurrency" hidden="true" showIf="bankOrder.isMultiCurrency"/>
					</panel>
					<panel colSpan="6" hidden="true" showIf="bankOrder.isMultiCurrency">
						<field name="companyCurrencyAmount" colSpan="4"/>
						<field name="bankOrder.companyCurrency" colSpan="2"/>
					</panel>
					<field name="receiverReference"/>
					<field name="receiverLabel"/>
					
					<panel name="additionnalInformationPanel" title="Additionnal informations" colSpan="12" canCollapse="true" collapseIf="true" hidden="true">
						<field name="bankOrderEconomicReason"/>
						<field name="receiverCountry" colSpan="4"/>
						<field name="receiverCountry.alpha2Code" colSpan="2" showTitle="false"/>
						<field name="paymentModeSelect"/>
						<field name="feesImputationModeSelect"/>
					</panel>
					
					<panel name="furtherInformationPanel" title="Further informations" colSpan="12" canCollapse="true" collapseIf="true" hidden="true">
						<panel name="paymentReasonPanel" title="Payment Reason" css="label-small" itemSpan="12">
							<field name="paymentReasonLine1" showTitle="false" requiredIf="specialInstructionsLine1 || specialInstructionsLine2 || specialInstructionsLine3"/>
							<field name="paymentReasonLine2" showTitle="false"/>
							<field name="paymentReasonLine3" showTitle="false"/>
							<field name="paymentReasonLine4" showTitle="false"/>
						</panel>
						<panel name="specialInstructionPanel" title="Special instructions" css="small" itemSpan="12">
							<field name="specialInstructionsLine1" showTitle="false"/>
							<field name="specialInstructionsLine2" showTitle="false"/>
							<field name="specialInstructionsLine3" showTitle="false"/>
						</panel>
					</panel>
					
					<panel title="Reject informations" colSpan="12" hidden="true" showIf="isRejected">
						<field name="rejectDate"/>
						<field name="rejectMove" hidden="true" showIf="isRejected == true" form-view="move-form" grid-view="move-grid"/>
						<field name="interbankCodeLine" onSelect="action-bank-order-attrs-interbank-code-line-domain" form-view="interbank-code-line-form" grid-view="interbank-code-line-grid"/>
						<field name="interbankCodeLine.description" colSpan="12"/>
						<field name="isRejected" hidden="true"/>
					</panel>
					<field name="bankOrder.orderTypeSelect" hidden="true"/>
					<field name="bankOrder.isMultiDate" hidden="true"/>
					<field name="bankOrder.isMultiCurrency" hidden="true"/>
				</editor>
			</field>
		</panel>
  		<panel name="action" title="Action" itemSpan="12" sidebar="true" hideIf="statusSelect == 4 || statusSelect == 5">
    		<button name="confirm" title="Confirm" hideIf="statusSelect != 1 || orderTypeSelect == 3 || orderTypeSelect == 5" onClick="action-group-bank-order-confirm"/>
    		<button name="validate" title="Validate" showIf="(statusSelect == 1 &amp;&amp; (orderTypeSelect == 3 || orderTypeSelect == 5) ) || (statusSelect == 2 &amp;&amp; orderTypeSelect != 3 &amp;&amp; orderTypeSelect != 5)" onClick="action-group-bank-order-onvalidate"/>
    		<button name="carry out" title="Carry out" showIf="((statusSelect == 3 &amp;&amp; orderTypeSelect != 3 &amp;&amp; orderTypeSelect != 5) || (statusSelect == 2 &amp;&amp; (orderTypeSelect == 3 || orderTypeSelect == 5)))" onClick="save,action-bank-order-record-carry-out,action-method-bank-order-payment-validate,save"/>
			<button name="reject" title="Reject" showIf="((statusSelect == 3 &amp;&amp; orderTypeSelect != 3 &amp;&amp; orderTypeSelect != 5) || (statusSelect == 2 &amp;&amp; (orderTypeSelect == 3 || orderTypeSelect == 5)))" onClick="save,action-bank-order-record-reject,action-method-bank-order-payment-cancel,save"/>    		
    		<button name="cancel" title="Cancel" showIf="statusSelect == 1" onClick="save,action-bank-order-record-cancel,save"/>
  		</panel>
	</form>
	
	<form name="bank-order-sign-wizard-form" title="Sign bank order" model="com.axelor.apps.base.db.Wizard" onNew="action-bank-order-load-dummy-field-record-sign">
  		<panel colSpan="6">
    		<field name="$amount" title="Total Amount" readonly="true" type="decimal" colOffset="1" colSpan="6"/>
    		<field name="$ebicsUser" title="Ebics User" type="many-to-one" widget="SuggestBox" colOffset="1" canEdit="false" colSpan="6" target="com.axelor.apps.account.db.EbicsUser" required="true" grid-view="ebics-user-grid" form-view="ebics-user-form"/>
    		<field name="$password" title="Password" widget="password" colOffset="1"  colSpan="6" required="true"/>
    		<button name="validate" title="Validate" colOffset="1"  colSpan="6" onClick="action-method-bank-order-sign,close"/>
  		</panel>
	</form>
	
	<action-attrs name="action-bank-order-line-attrs-on-load">
		<attribute name="hidden" for="bankOrderLineList.additionnalInformationPanel" expr="eval: !bankOrderFileFormat?.displayAdditionnalInformations"/>
		<attribute name="hidden" for="bankOrderLineList.furtherInformationPanel" expr="eval: !bankOrderFileFormat?.displayFurtherInformations"/>
	</action-attrs>
	
	<!-- BANK ORDER ACTIONS -->
		<!-- Actions Groups-->
		
	<action-group name="action-group-bank-order-onnew">
		<action name="action-bank-order-record-default"/>
		<action name="action-bank-order-attrs-order-type"/>
		<action name="action-bank-order-record-partner-type-select-default"/>
		<action name="action-bank-order-attrs-domain-hidden"/>
		<action name="action-bank-order-record-sender-company-change"/>
	</action-group>
	
	<action-group name="action-group-bank-order-onvalidate">
		<action name="save"/>
		<action name="action-method-bank-order-validate"/>
	</action-group>
	
	<action-group name="action-group-bank-order-confirm">
		<action name="save"/>
  		<action name="action-method-bank-order-confirm"/>
	</action-group>
	
		<!-- Actions Attributes -->
		
	<action-attrs name="action-bank-order-attrs-bank-details-domain">
        <attribute name="domain" expr="eval: &quot;self.id IN (${senderCompany?.bankDetailsSet?.collect{it.id}.join(',')},${senderCompany?.defaultBankDetails?.id})&quot;" for="senderBankDetails"
        	if="!senderCompany?.bankDetailsSet?.isEmpty()"/>
    <attribute name="domain" expr="eval: &quot;self.id = ${senderCompany?.defaultBankDetails?.id}&quot;" for="senderBankDetails"
        	if="senderCompany?.bankDetailsSet?.isEmpty()"/>
    </action-attrs>
    
    <action-attrs name="action-bank-order-attrs-order-type">
		<attribute name="readonly" for="orderTypeSelect" expr="true" if="orderTypeSelect != null"/>    
		<attribute name="hidden" for="orderTypeSelect" expr="true" if="orderTypeSelect != null"/>
    </action-attrs>
    
     <action-attrs name="action-bank-order-attrs-domain-hidden">
		<attribute name="domain" for="partnerTypeSelect" expr="3" if="orderTypeSelect == 3 || orderTypeSelect == 5"/>
		<attribute name="readonly" for="partnerTypeSelect" expr="true" if="orderTypeSelect == 3 || orderTypeSelect == 5"/>
    </action-attrs>
    
    	<!-- Actions Records -->
    	
    <action-record name="action-bank-order-record-default" model="com.axelor.apps.account.db.BankOrder">
		<field name="orderTypeSelect" expr="eval: _orderTypeSelect" if="_orderTypeSelect != null"/>
		<field name="bankOrderDate" expr="eval:__config__.app.getTodayDate()"/>
		<field name="senderCompany" expr="eval:__user__.activeCompany"/>
		<field name="senderBankDetails" expr="eval:__user__.activeCompany.defaultBankDetails"/>
		<field name="currency" expr="eval:__user__.activeCompany.currency"/>
		<field name="signatoryUser" expr="eval: __repo__.of(AccountConfig).all().filter('self.company = ?',__user__.activeCompany).fetchOne()?.defaultSignatoryUser"/>
	</action-record>
	
	<action-record name="action-bank-order-record-sender-company-change" model="com.axelor.apps.account.db.BankOrder">
		<field name="companyCurrency" expr="eval: senderCompany?.currency"/>
	</action-record>
	
	<action-record name="action-bank-order-record-payment-mode-change" model="com.axelor.apps.account.db.BankOrder">
		<field name="bankOrderFileFormat" expr="eval: paymentMode?.bankOrderFileFormat"/>
	</action-record>
	
	<action-record name="action-bank-order-record-bank-order-file-format-change" model="com.axelor.apps.account.db.BankOrder">
		<field name="bankOrderCurrency" expr="eval: bankOrderFileFormat?.currency"/>
	</action-record>
	
	<action-record name="action-bank-order-record-carry-out" model="com.axelor.apps.account.db.BankOrder">
		<field name="statusSelect" expr="4"/>
	</action-record>
	
	<action-record name="action-bank-order-record-reject" model="com.axelor.apps.account.db.BankOrder">
		<field name="statusSelect" expr="5"/>
		<field name="rejectStatusSelect" expr="2"/>
	</action-record>
	
	<action-record name="action-bank-order-record-cancel" model="com.axelor.apps.account.db.BankOrder">
		<field name="statusSelect" expr="6"/>
	</action-record>
	
	<action-record name="action-bank-order-load-dummy-field-record-sign" model="com.axelor.apps.account.db.BankOrder">
		<field name="$amount" expr="eval: _contextBankOrder?.amount"/>
		<field name="$bankOrder" expr="eval: _contextBankOrder"/>
	</action-record>
	
	<action-record name="action-bank-order-record-partner-type-select-default" model="com.axelor.apps.account.db.BankOrder">
		<field name="partnerTypeSelect" expr="3" if="orderTypeSelect == 3 || orderTypeSelect == 5"/>
	</action-record>
	
		<!-- Actions Methods -->
	
	<action-method name="action-method-bank-order-confirm">
		<call class="com.axelor.apps.account.web.BankOrderController" method="confirm"/>
	</action-method>

	<action-method name="action-method-bank-order-sign">
		<call class="com.axelor.apps.account.web.BankOrderController" method="sign"/>
	</action-method>
	
	<action-method name="action-bank-order-method-check-lines">
		<call class="com.axelor.apps.account.web.BankOrderController" method="checkLines"/>
	</action-method>
	
  	<action-method name="action-method-bank-order-validate">
		<call class="com.axelor.apps.account.web.BankOrderController" method="validate"/>
	</action-method>
	
	<action-method name="action-method-bank-order-payment-validate">
		<call class="com.axelor.apps.account.web.BankOrderController" method="validatePayment"/>
	</action-method>
	
	<action-method name="action-method-bank-order-payment-cancel">
		<call class="com.axelor.apps.account.web.BankOrderController" method="cancelPayment"/>
	</action-method>
	
	<action-method name="action-method-bank-order-merge">
		<call class="com.axelor.apps.account.web.BankOrderController" method="merge"/>
	</action-method>
	
	<action-method name="action-bank-order-method-print">
    	<call class="com.axelor.apps.account.web.BankOrderController" method="print"/>
    </action-method>
	
	<!-- BANK ORDER LINES ACTIONS -->
		
		<!-- Actions Attributes -->
		
    <action-attrs name="action-bank-order-line-attrs-partner-domain">
		<attribute name="domain" for="partner" expr="self.isCustomer = true" if="_parent.partnerTypeSelect == 3"/>    
		<attribute name="domain" for="partner" expr="self.isEmployee = true" if="_parent.partnerTypeSelect == 2"/>
		<attribute name="domain" for="partner" expr="self.isSupplier = true" if="_parent.partnerTypeSelect == 1"/>
    </action-attrs>
    
    <action-attrs name="action-bank-order-line-attrs-bank-details-domain">
        <attribute if="!receiverCompany?.bankDetailsSet?.isEmpty() &amp;&amp; _parent.orderTypeSelect == 1" name="domain" expr="eval: &quot;self.id IN (${receiverCompany?.bankDetailsSet?.collect{it.id}.join(',')},${receiverCompany?.defaultBankDetails?.id})&quot;" for="receiverBankDetails"/>
  		<attribute if="receiverCompany?.bankDetailsSet?.isEmpty() &amp;&amp; _parent.orderTypeSelect == 1" name="domain" expr="eval: &quot;self.id = ${receiverCompany?.defaultBankDetails?.id}&quot;" for="receiverBankDetails"/>
  		<attribute if="!partner?.bankDetailsList?.isEmpty() &amp;&amp; _parent.orderTypeSelect != 1" name="domain" expr="eval: &quot;self.id IN (${partner?.bankDetailsList?.collect{it.id}.join(',')})&quot;" for="receiverBankDetails"/>
  		<attribute if="partner?.bankDetailsList?.isEmpty() &amp;&amp; _parent.orderTypeSelect != 1" name="domain" expr="self.id IN (0)" for="receiverBankDetails"/>
    </action-attrs>	
    
     <action-attrs name="action-bank-order-attrs-interbank-code-line-domain">
		<attribute name="domain" for="interbankCodeLine" expr="self.transferCfonbOk = true" if="_parent.orderTypeSelect in (1,2,4)"/>
		<attribute name="domain" for="interbankCodeLine" expr="self.directDebitSepaOk = true" if="_parent.orderTypeSelect == 3"/>
		<attribute name="domain" for="interbankCodeLine" expr="self.directDebitAndTipCfonbOk = true" if="_parent.orderTypeSelect == 5"/>      
    </action-attrs>
    
		<!-- Actions Records -->
	
	<action-record name="action-bank-order-line-record-receiver-company-change" model="com.axelor.apps.account.db.BankOrderLine">
    	<field name="partner" expr="eval: receiverCompany.partner"/>
    	<field name="receiverBankDetails" expr="eval: receiverCompany.defaultBankDetails"/>
    </action-record>
    
    <action-record name="action-bank-order-line-record-partner-onchange" model="com.axelor.apps.account.db.BankOrderLine">
    	  <field name="receiverBankDetails" expr="eval: partner?.bankDetailsList.find{ it -> it.isDefault } ? partner?.bankDetailsList.find{ it -> it.isDefault } : receiverBankDetails"/>
  		  <field if="partner?.bankDetailsList?.isEmpty()" name="receiverBankDetails" expr=""/>
    </action-record>
    
    
    
</object-views>