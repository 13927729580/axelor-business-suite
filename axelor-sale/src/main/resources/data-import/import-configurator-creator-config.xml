<?xml version="1.0" encoding="utf-8"?>
<xml-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_5.0.xsd">
 	 	
   <input file="configurator-creator.xml" root="configurator-creators">
   
   <!--   TODO : Import configuratorBOMs -->
   
     <bind node="configurator-bom" type="com.axelor.apps.production.db.ConfiguratorBOM" search="self.id = :id" update="true">
     
       <bind node="name" to="name"/>
<!--        <bind node="company" to="company" search="self.code = :companyCode"> -->
<!--          <bind node="text()" to="code" alias="companyCode"/> -->
<!--        </bind> -->
       <bind node="nameFormula" to="nameFormula"/>
       <bind node="defNameAsFormula" to="defNameAsFormula"/>
<!--        <bind node="product" to="product" search="self.code = :productCode"> -->
<!--          <bind node="text()" to="code" alias="productCode"/> -->
<!--        </bind> -->
       <bind node="productFormula" to="productFormula"/>
       <bind node="defProductAsFormula" to="defProductAsFormula"/>
       <bind node="defProductFromConfigurator" to="defProductFromConfigurator"/>
	   <bind node="qty" to="qty"/>
	   <bind node="qtyFormula" to="qtyFormula"/>
	   <bind node="defQtyAsFormula" to="defQtyAsFormula"/>
<!-- 	   <bind node="unit" to="unit" search="self.id = :unitId"> -->
<!--          <bind node="text()" to="id" alias="unitId"/> -->
<!--        </bind> -->
       <bind node="unitFormula" to="unitFormula"/>
       <bind node="defUnitAsFormula" to="defUnitAsFormula"/>
         
<!--        <bind node="prodProcess" to="prodProcess" search="self.code = :prodProcessCode"> -->
<!--          <bind node="text()" to="code" alias="prodProcessCode"/> -->
<!--        </bind> -->
         
<!--        <bind node="configuratorProdProcess" to="configuratorProdProcess" search="self.id = :configuratorProdProcessId"> -->
<!--          <bind node="text()" to="id" alias="configuratorProdProcessId"/> -->
<!--          <bind node="name" to="name"/> -->
<!--          <bind node="company" to="company" search="self.code = :companyCode"> -->
<!--            <bind node="text()" to="code" alias="companyCode"/> -->
<!--          </bind> -->
<!--          <bind node="location" to="location" search="self.id = :locationId"> -->
<!--            <bind node="text()" to="id" alias="locationId"/> -->
<!--          </bind> -->
<!--          <bind node="configuratorProdProcessLineList/configuratorProdProcessLine" to="configuratorProdProcessLineList"> -->
<!--            <bind node="name" to="name"/> -->
<!--            <bind node="priority" to="priority"/> -->
<!--            <bind node="workCenter" to="workCenter" search="self.id = :workCenterId"> -->
<!--              <bind node="text()" to="id" alias="workCenterId"/> -->
<!--            </bind> -->
<!--            <bind node="location" to="location" search="self.id = :locationId"> -->
<!--              <bind node="text()" to="id" alias="locationId"/> -->
<!--            </bind> -->
<!--            <bind node="outsourcing" to="outsourcing"/> -->
<!--            <bind node="description" to="description"/> -->
<!--            <bind node="minCapacityPerCycle" to="minCapacityPerCycle"/> -->
<!--            <bind node="minCapacityPerCycleFormula" to="minCapacityPerCycleFormula"/> -->
<!--            <bind node="defMinCapacityFormula" to="defMinCapacityFormula"/> -->
<!--            <bind node="maxCapacityPerCycle" to="maxCapacityPerCycle"/> -->
<!--            <bind node="maxCapacityPerCycleFormula" to="maxCapacityPerCycleFormula"/> -->
<!--            <bind node="defMaxCapacityFormula" to="defMaxCapacityFormula"/> -->
<!--            <bind node="durationPerCycle" to="durationPerCycle"/> -->
<!--            <bind node="durationPerCycleFormula" to="durationPerCycleFormula"/> -->
<!--            <bind node="defDurationFormula" to="defDurationFormula"/> -->
<!--          </bind> -->
<!--        </bind> -->
         
       <bind node="prodProcessFormula" to="prodProcessFormula"/>
       <bind node="defProdProcessAsFormula" to="defProdProcessAsFormula"/>
       <bind node="defProdProcessAsConfigurator" to="defProdProcessAsConfigurator"/>
       <bind node="parentConfiguratorBOM" to="parentConfiguratorBOM" search="self.id = :parentConfiguratorBOMId">
       	 <bind node="text()" to="id" alias="parentConfiguratorBOMId"/>
       </bind>
     
       <bind node="useCondition" to="useCondition"/>
       <bind node="billOfMaterialId" to="billOfMaterialId"/>           
       
     </bind>
   
   
   <!--  	Import configurator creators  -->
   
     <bind node="configurator-creator" type="com.axelor.apps.sale.db.ConfiguratorCreator" search="self.name = :name" update="true">
     
       <bind node="name" to="name"/>
       <bind node="generateProduct" to="generateProduct"/>
       <bind node="isActive" to="isActive"/> 
       
       <bind node="attributes/attribute" to="attributes" search="self.id = :attributeId" update="true">
         <bind node="name" to="name"/>
         <bind node="title" to="title"/>
         <bind node="type" to="type"/>
         <bind node="defaultValue" to="defaultValue"/>
         <bind node="model" to="model"/>
         <bind node="modelField" to="modelField"/>
         <bind node="selection" to="selection"/>
         <bind node="widget" to="widget"/>
         <bind node="help" to="help"/>
         <bind node="showIf" to="showIf"/>
         <bind node="hideIf" to="hideIf"/>
         <bind node="requiredIf" to="requiredIf"/>
         <bind node="hidden" to="hidden"/>
         <bind node="required" to="required"/>
         <bind node="nameField" to="nameField"/>
         <bind node="hiddenInGrid" to="hiddenInGrid"/>
         <bind node="minSize" to="minSize"/>
         <bind node="maxSize" to="maxSize"/>
         <bind node="precision" to="precision"/>
         <bind node="scale" to="scale"/>
         <bind node="regex" to="regex"/>
         <bind node="targetModel" to="targetModel"/>
         <bind node="enumType" to="enumType"/>
         <bind node="formView" to="formView"/>
         <bind node="gridView" to="gridView"/>
         <bind node="domain" to="domain"/>
         <bind node="sequence" to="sequence"/>
         <bind node="onChange" to="onChange"/>
         <bind node="onClick" to="onClick"/>
         <bind node="widgetAttrs" to="widgetAttrs"/>
       </bind>

       <bind node="configuratorFormulaList/configuratorFormula" to="configuratorFormulaList">
         <bind node="productMetaField" to="productMetaField" search="self.id = :productMetaField">
           <bind node="text()" to="id" alias="productMetaField"/>
         </bind>
         <bind node="saleOrderLineMetaField" to="saleOrderLineMetaField" search="self.id = :saleOrderLineMetaField">
           <bind node="text()" to="id" alias="saleOrderLineMetaField" />
         </bind>
         <bind node="formula" to="formula"/>
         <bind node="showOnConfigurator" to="showOnConfigurator"/>
       </bind>
       
       <bind node="authorizedUserSet/authorizedUser" to="authorizedUserSet" search="self.code = :userCode">
         <bind node="text()" to="code" alias="userCode"/>
       </bind>
       <bind node="authorizedGroupSet/authorizedGroup" to="authorizedGroupSet" search="self.code = :groupCode">
         <bind node="text()" to="code" alias="groupCode"/>
       </bind>
       
       <bind node="configuratorBomName" to="configuratorBom" search="self.name = :configBomName" update="true">
         <bind node="text()" to="name" alias="configBomName"/>
       </bind>
       
     </bind>
   
   
   </input> 
   
   
   <!-- Build configurator BOM arborescence -->
   
    	
</xml-inputs>
